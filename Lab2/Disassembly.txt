bomb:     file format elf64-x86-64


Disassembly of section .init:

0000000000400b00 <_init>:
  400b00:       48 83 ec 08             sub    $0x8,%rsp
  400b04:       48 8b 05 ed 34 20 00    mov    0x2034ed(%rip),%rax        # 603ff8 <_DYNAMIC+0x1d0>
  400b0b:       48 85 c0                test   %rax,%rax
  400b0e:       74 05                   je     400b15 <_init+0x15>
  400b10:       e8 db 01 00 00          callq  400cf0 <socket@plt+0x10>
  400b15:       48 83 c4 08             add    $0x8,%rsp
  400b19:       c3                      retq

Disassembly of section .plt:

0000000000400b20 <getenv@plt-0x10>:
  400b20:       ff 35 e2 34 20 00       pushq  0x2034e2(%rip)        # 604008 <_GLOBAL_OFFSET_TABLE_+0x8>
  400b26:       ff 25 e4 34 20 00       jmpq   *0x2034e4(%rip)        # 604010 <_GLOBAL_OFFSET_TABLE_+0x10>
  400b2c:       0f 1f 40 00             nopl   0x0(%rax)

0000000000400b30 <getenv@plt>:
  400b30:       ff 25 e2 34 20 00       jmpq   *0x2034e2(%rip)        # 604018 <_GLOBAL_OFFSET_TABLE_+0x18>
  400b36:       68 00 00 00 00          pushq  $0x0
  400b3b:       e9 e0 ff ff ff          jmpq   400b20 <_init+0x20>

0000000000400b40 <strcasecmp@plt>:
  400b40:       ff 25 da 34 20 00       jmpq   *0x2034da(%rip)        # 604020 <_GLOBAL_OFFSET_TABLE_+0x20>
  400b46:       68 01 00 00 00          pushq  $0x1
  400b4b:       e9 d0 ff ff ff          jmpq   400b20 <_init+0x20>

0000000000400b50 <__errno_location@plt>:
  400b50:       ff 25 d2 34 20 00       jmpq   *0x2034d2(%rip)        # 604028 <_GLOBAL_OFFSET_TABLE_+0x28>
  400b56:       68 02 00 00 00          pushq  $0x2
  400b5b:       e9 c0 ff ff ff          jmpq   400b20 <_init+0x20>

0000000000400b60 <strcpy@plt>:
  400b60:       ff 25 ca 34 20 00       jmpq   *0x2034ca(%rip)        # 604030 <_GLOBAL_OFFSET_TABLE_+0x30>
  400b66:       68 03 00 00 00          pushq  $0x3
  400b6b:       e9 b0 ff ff ff          jmpq   400b20 <_init+0x20>

0000000000400b70 <puts@plt>:
  400b70:       ff 25 c2 34 20 00       jmpq   *0x2034c2(%rip)        # 604038 <_GLOBAL_OFFSET_TABLE_+0x38>
  400b76:       68 04 00 00 00          pushq  $0x4
  400b7b:       e9 a0 ff ff ff          jmpq   400b20 <_init+0x20>

0000000000400b80 <write@plt>:
  400b80:       ff 25 ba 34 20 00       jmpq   *0x2034ba(%rip)        # 604040 <_GLOBAL_OFFSET_TABLE_+0x40>
  400b86:       68 05 00 00 00          pushq  $0x5
  400b8b:       e9 90 ff ff ff          jmpq   400b20 <_init+0x20>

0000000000400b90 <__stack_chk_fail@plt>:
  400b90:       ff 25 b2 34 20 00       jmpq   *0x2034b2(%rip)        # 604048 <_GLOBAL_OFFSET_TABLE_+0x48>
  400b96:       68 06 00 00 00          pushq  $0x6
  400b9b:       e9 80 ff ff ff          jmpq   400b20 <_init+0x20>

0000000000400ba0 <alarm@plt>:
  400ba0:       ff 25 aa 34 20 00       jmpq   *0x2034aa(%rip)        # 604050 <_GLOBAL_OFFSET_TABLE_+0x50>
  400ba6:       68 07 00 00 00          pushq  $0x7
  400bab:       e9 70 ff ff ff          jmpq   400b20 <_init+0x20>

0000000000400bb0 <close@plt>:
  400bb0:       ff 25 a2 34 20 00       jmpq   *0x2034a2(%rip)        # 604058 <_GLOBAL_OFFSET_TABLE_+0x58>
  400bb6:       68 08 00 00 00          pushq  $0x8
  400bbb:       e9 60 ff ff ff          jmpq   400b20 <_init+0x20>

0000000000400bc0 <read@plt>:
  400bc0:       ff 25 9a 34 20 00       jmpq   *0x20349a(%rip)        # 604060 <_GLOBAL_OFFSET_TABLE_+0x60>
  400bc6:       68 09 00 00 00          pushq  $0x9
  400bcb:       e9 50 ff ff ff          jmpq   400b20 <_init+0x20>

0000000000400bd0 <__libc_start_main@plt>:
  400bd0:       ff 25 92 34 20 00       jmpq   *0x203492(%rip)        # 604068 <_GLOBAL_OFFSET_TABLE_+0x68>
  400bd6:       68 0a 00 00 00          pushq  $0xa
  400bdb:       e9 40 ff ff ff          jmpq   400b20 <_init+0x20>

0000000000400be0 <fgets@plt>:
  400be0:       ff 25 8a 34 20 00       jmpq   *0x20348a(%rip)        # 604070 <_GLOBAL_OFFSET_TABLE_+0x70>
  400be6:       68 0b 00 00 00          pushq  $0xb
  400beb:       e9 30 ff ff ff          jmpq   400b20 <_init+0x20>

0000000000400bf0 <signal@plt>:
  400bf0:       ff 25 82 34 20 00       jmpq   *0x203482(%rip)        # 604078 <_GLOBAL_OFFSET_TABLE_+0x78>
  400bf6:       68 0c 00 00 00          pushq  $0xc
  400bfb:       e9 20 ff ff ff          jmpq   400b20 <_init+0x20>

0000000000400c00 <gethostbyname@plt>:
  400c00:       ff 25 7a 34 20 00       jmpq   *0x20347a(%rip)        # 604080 <_GLOBAL_OFFSET_TABLE_+0x80>
  400c06:       68 0d 00 00 00          pushq  $0xd
  400c0b:       e9 10 ff ff ff          jmpq   400b20 <_init+0x20>

0000000000400c10 <__memmove_chk@plt>:
  400c10:       ff 25 72 34 20 00       jmpq   *0x203472(%rip)        # 604088 <_GLOBAL_OFFSET_TABLE_+0x88>
  400c16:       68 0e 00 00 00          pushq  $0xe
  400c1b:       e9 00 ff ff ff          jmpq   400b20 <_init+0x20>

0000000000400c20 <strtol@plt>:
  400c20:       ff 25 6a 34 20 00       jmpq   *0x20346a(%rip)        # 604090 <_GLOBAL_OFFSET_TABLE_+0x90>
  400c26:       68 0f 00 00 00          pushq  $0xf
  400c2b:       e9 f0 fe ff ff          jmpq   400b20 <_init+0x20>

0000000000400c30 <fflush@plt>:
  400c30:       ff 25 62 34 20 00       jmpq   *0x203462(%rip)        # 604098 <_GLOBAL_OFFSET_TABLE_+0x98>
  400c36:       68 10 00 00 00          pushq  $0x10
  400c3b:       e9 e0 fe ff ff          jmpq   400b20 <_init+0x20>

0000000000400c40 <__isoc99_sscanf@plt>:
  400c40:       ff 25 5a 34 20 00       jmpq   *0x20345a(%rip)        # 6040a0 <_GLOBAL_OFFSET_TABLE_+0xa0>
  400c46:       68 11 00 00 00          pushq  $0x11
  400c4b:       e9 d0 fe ff ff          jmpq   400b20 <_init+0x20>

0000000000400c50 <__printf_chk@plt>:
  400c50:       ff 25 52 34 20 00       jmpq   *0x203452(%rip)        # 6040a8 <_GLOBAL_OFFSET_TABLE_+0xa8>
  400c56:       68 12 00 00 00          pushq  $0x12
  400c5b:       e9 c0 fe ff ff          jmpq   400b20 <_init+0x20>

0000000000400c60 <fopen@plt>:
  400c60:       ff 25 4a 34 20 00       jmpq   *0x20344a(%rip)        # 6040b0 <_GLOBAL_OFFSET_TABLE_+0xb0>
  400c66:       68 13 00 00 00          pushq  $0x13
  400c6b:       e9 b0 fe ff ff          jmpq   400b20 <_init+0x20>

0000000000400c70 <gethostname@plt>:
  400c70:       ff 25 42 34 20 00       jmpq   *0x203442(%rip)        # 6040b8 <_GLOBAL_OFFSET_TABLE_+0xb8>
  400c76:       68 14 00 00 00          pushq  $0x14
  400c7b:       e9 a0 fe ff ff          jmpq   400b20 <_init+0x20>

0000000000400c80 <exit@plt>:
  400c80:       ff 25 3a 34 20 00       jmpq   *0x20343a(%rip)        # 6040c0 <_GLOBAL_OFFSET_TABLE_+0xc0>
  400c86:       68 15 00 00 00          pushq  $0x15
  400c8b:       e9 90 fe ff ff          jmpq   400b20 <_init+0x20>

0000000000400c90 <connect@plt>:
  400c90:       ff 25 32 34 20 00       jmpq   *0x203432(%rip)        # 6040c8 <_GLOBAL_OFFSET_TABLE_+0xc8>
  400c96:       68 16 00 00 00          pushq  $0x16
  400c9b:       e9 80 fe ff ff          jmpq   400b20 <_init+0x20>

0000000000400ca0 <__fprintf_chk@plt>:
  400ca0:       ff 25 2a 34 20 00       jmpq   *0x20342a(%rip)        # 6040d0 <_GLOBAL_OFFSET_TABLE_+0xd0>
  400ca6:       68 17 00 00 00          pushq  $0x17
  400cab:       e9 70 fe ff ff          jmpq   400b20 <_init+0x20>

0000000000400cb0 <sleep@plt>:
  400cb0:       ff 25 22 34 20 00       jmpq   *0x203422(%rip)        # 6040d8 <_GLOBAL_OFFSET_TABLE_+0xd8>
  400cb6:       68 18 00 00 00          pushq  $0x18
  400cbb:       e9 60 fe ff ff          jmpq   400b20 <_init+0x20>

0000000000400cc0 <__ctype_b_loc@plt>:
  400cc0:       ff 25 1a 34 20 00       jmpq   *0x20341a(%rip)        # 6040e0 <_GLOBAL_OFFSET_TABLE_+0xe0>
  400cc6:       68 19 00 00 00          pushq  $0x19
  400ccb:       e9 50 fe ff ff          jmpq   400b20 <_init+0x20>

0000000000400cd0 <__sprintf_chk@plt>:
  400cd0:       ff 25 12 34 20 00       jmpq   *0x203412(%rip)        # 6040e8 <_GLOBAL_OFFSET_TABLE_+0xe8>
  400cd6:       68 1a 00 00 00          pushq  $0x1a
  400cdb:       e9 40 fe ff ff          jmpq   400b20 <_init+0x20>

0000000000400ce0 <socket@plt>:
  400ce0:       ff 25 0a 34 20 00       jmpq   *0x20340a(%rip)        # 6040f0 <_GLOBAL_OFFSET_TABLE_+0xf0>
  400ce6:       68 1b 00 00 00          pushq  $0x1b
  400ceb:       e9 30 fe ff ff          jmpq   400b20 <_init+0x20>

Disassembly of section .plt.got:

0000000000400cf0 <.plt.got>:
  400cf0:       ff 25 02 33 20 00       jmpq   *0x203302(%rip)        # 603ff8 <_DYNAMIC+0x1d0>
  400cf6:       66 90                   xchg   %ax,%ax

Disassembly of section .text:

0000000000400d00 <_start>:
  400d00:       31 ed                   xor    %ebp,%ebp
  400d02:       49 89 d1                mov    %rdx,%r9
  400d05:       5e                      pop    %rsi
  400d06:       48 89 e2                mov    %rsp,%rdx
  400d09:       48 83 e4 f0             and    $0xfffffffffffffff0,%rsp
  400d0d:       50                      push   %rax
  400d0e:       54                      push   %rsp
  400d0f:       49 c7 c0 00 25 40 00    mov    $0x402500,%r8
  400d16:       48 c7 c1 90 24 40 00    mov    $0x402490,%rcx
  400d1d:       48 c7 c7 f6 0d 40 00    mov    $0x400df6,%rdi
  400d24:       e8 a7 fe ff ff          callq  400bd0 <__libc_start_main@plt>
  400d29:       f4                      hlt
  400d2a:       66 0f 1f 44 00 00       nopw   0x0(%rax,%rax,1)

0000000000400d30 <deregister_tm_clones>:
  400d30:       b8 87 47 60 00          mov    $0x604787,%eax
  400d35:       55                      push   %rbp
  400d36:       48 2d 80 47 60 00       sub    $0x604780,%rax
  400d3c:       48 83 f8 0e             cmp    $0xe,%rax
  400d40:       48 89 e5                mov    %rsp,%rbp
  400d43:       76 1b                   jbe    400d60 <deregister_tm_clones+0x30>
  400d45:       b8 00 00 00 00          mov    $0x0,%eax
  400d4a:       48 85 c0                test   %rax,%rax
  400d4d:       74 11                   je     400d60 <deregister_tm_clones+0x30>
  400d4f:       5d                      pop    %rbp
  400d50:       bf 80 47 60 00          mov    $0x604780,%edi
  400d55:       ff e0                   jmpq   *%rax
  400d57:       66 0f 1f 84 00 00 00    nopw   0x0(%rax,%rax,1)
  400d5e:       00 00
  400d60:       5d                      pop    %rbp
  400d61:       c3                      retq
  400d62:       0f 1f 40 00             nopl   0x0(%rax)
  400d66:       66 2e 0f 1f 84 00 00    nopw   %cs:0x0(%rax,%rax,1)
  400d6d:       00 00 00

0000000000400d70 <register_tm_clones>:
  400d70:       be 80 47 60 00          mov    $0x604780,%esi
  400d75:       55                      push   %rbp
  400d76:       48 81 ee 80 47 60 00    sub    $0x604780,%rsi
  400d7d:       48 c1 fe 03             sar    $0x3,%rsi
  400d81:       48 89 e5                mov    %rsp,%rbp
  400d84:       48 89 f0                mov    %rsi,%rax
  400d87:       48 c1 e8 3f             shr    $0x3f,%rax
  400d8b:       48 01 c6                add    %rax,%rsi
  400d8e:       48 d1 fe                sar    %rsi
  400d91:       74 15                   je     400da8 <register_tm_clones+0x38>
  400d93:       b8 00 00 00 00          mov    $0x0,%eax
  400d98:       48 85 c0                test   %rax,%rax
  400d9b:       74 0b                   je     400da8 <register_tm_clones+0x38>
  400d9d:       5d                      pop    %rbp
  400d9e:       bf 80 47 60 00          mov    $0x604780,%edi
  400da3:       ff e0                   jmpq   *%rax
  400da5:       0f 1f 00                nopl   (%rax)
  400da8:       5d                      pop    %rbp
  400da9:       c3                      retq
  400daa:       66 0f 1f 44 00 00       nopw   0x0(%rax,%rax,1)

0000000000400db0 <__do_global_dtors_aux>:
  400db0:       80 3d f1 39 20 00 00    cmpb   $0x0,0x2039f1(%rip)        # 6047a8 <completed.7585>
  400db7:       75 11                   jne    400dca <__do_global_dtors_aux+0x1a>
  400db9:       55                      push   %rbp
  400dba:       48 89 e5                mov    %rsp,%rbp
  400dbd:       e8 6e ff ff ff          callq  400d30 <deregister_tm_clones>
  400dc2:       5d                      pop    %rbp
  400dc3:       c6 05 de 39 20 00 01    movb   $0x1,0x2039de(%rip)        # 6047a8 <completed.7585>
  400dca:       f3 c3                   repz retq
  400dcc:       0f 1f 40 00             nopl   0x0(%rax)

0000000000400dd0 <frame_dummy>:
  400dd0:       bf 20 3e 60 00          mov    $0x603e20,%edi
  400dd5:       48 83 3f 00             cmpq   $0x0,(%rdi)
  400dd9:       75 05                   jne    400de0 <frame_dummy+0x10>
  400ddb:       eb 93                   jmp    400d70 <register_tm_clones>
  400ddd:       0f 1f 00                nopl   (%rax)
  400de0:       b8 00 00 00 00          mov    $0x0,%eax
  400de5:       48 85 c0                test   %rax,%rax
  400de8:       74 f1                   je     400ddb <frame_dummy+0xb>
  400dea:       55                      push   %rbp
  400deb:       48 89 e5                mov    %rsp,%rbp
  400dee:       ff d0                   callq  *%rax
  400df0:       5d                      pop    %rbp
  400df1:       e9 7a ff ff ff          jmpq   400d70 <register_tm_clones>

0000000000400df6 <main>:
  400df6:       53                      push   %rbx
  400df7:       83 ff 01                cmp    $0x1,%edi
  400dfa:       75 10                   jne    400e0c <main+0x16>
  400dfc:       48 8b 05 8d 39 20 00    mov    0x20398d(%rip),%rax        # 604790 <stdin@@GLIBC_2.2.5>
  400e03:       48 89 05 a6 39 20 00    mov    %rax,0x2039a6(%rip)        # 6047b0 <infile>
  400e0a:       eb 63                   jmp    400e6f <main+0x79>
  400e0c:       48 89 f3                mov    %rsi,%rbx
  400e0f:       83 ff 02                cmp    $0x2,%edi
  400e12:       75 3a                   jne    400e4e <main+0x58>
  400e14:       48 8b 7e 08             mov    0x8(%rsi),%rdi
  400e18:       be 06 2d 40 00          mov    $0x402d06,%esi
  400e1d:       e8 3e fe ff ff          callq  400c60 <fopen@plt>
  400e22:       48 89 05 87 39 20 00    mov    %rax,0x203987(%rip)        # 6047b0 <infile>
  400e29:       48 85 c0                test   %rax,%rax
  400e2c:       75 41                   jne    400e6f <main+0x79>
  400e2e:       48 8b 4b 08             mov    0x8(%rbx),%rcx
  400e32:       48 8b 13                mov    (%rbx),%rdx
  400e35:       be 14 25 40 00          mov    $0x402514,%esi
  400e3a:       bf 01 00 00 00          mov    $0x1,%edi
  400e3f:       e8 0c fe ff ff          callq  400c50 <__printf_chk@plt>
  400e44:       bf 08 00 00 00          mov    $0x8,%edi
  400e49:       e8 32 fe ff ff          callq  400c80 <exit@plt>
  400e4e:       48 8b 16                mov    (%rsi),%rdx
  400e51:       be 31 25 40 00          mov    $0x402531,%esi
  400e56:       bf 01 00 00 00          mov    $0x1,%edi
  400e5b:       b8 00 00 00 00          mov    $0x0,%eax
  400e60:       e8 eb fd ff ff          callq  400c50 <__printf_chk@plt>
  400e65:       bf 08 00 00 00          mov    $0x8,%edi
  400e6a:       e8 11 fe ff ff          callq  400c80 <exit@plt>
  400e6f:       e8 cf 05 00 00          callq  401443 <initialize_bomb>
  400e74:       bf 98 25 40 00          mov    $0x402598,%edi
  400e79:       e8 f2 fc ff ff          callq  400b70 <puts@plt>
  400e7e:       bf d8 25 40 00          mov    $0x4025d8,%edi
  400e83:       e8 e8 fc ff ff          callq  400b70 <puts@plt>
  400e88:       e8 98 08 00 00          callq  401725 <read_line>
  400e8d:       48 89 c7                mov    %rax,%rdi
  400e90:       e8 98 00 00 00          callq  400f2d <phase_1>
  400e95:       e8 b1 09 00 00          callq  40184b <phase_defused>
  400e9a:       bf 08 26 40 00          mov    $0x402608,%edi
  400e9f:       e8 cc fc ff ff          callq  400b70 <puts@plt>
  400ea4:       e8 7c 08 00 00          callq  401725 <read_line>
  400ea9:       48 89 c7                mov    %rax,%rdi
  400eac:       e8 98 00 00 00          callq  400f49 <phase_2>
  400eb1:       e8 95 09 00 00          callq  40184b <phase_defused>
  400eb6:       bf 4b 25 40 00          mov    $0x40254b,%edi
  400ebb:       e8 b0 fc ff ff          callq  400b70 <puts@plt>
  400ec0:       e8 60 08 00 00          callq  401725 <read_line>
  400ec5:       48 89 c7                mov    %rax,%rdi
  400ec8:       e8 e4 00 00 00          callq  400fb1 <phase_3>
  400ecd:       e8 79 09 00 00          callq  40184b <phase_defused>
  400ed2:       bf 69 25 40 00          mov    $0x402569,%edi
  400ed7:       e8 94 fc ff ff          callq  400b70 <puts@plt>
  400edc:       e8 44 08 00 00          callq  401725 <read_line>
  400ee1:       48 89 c7                mov    %rax,%rdi
  400ee4:       e8 ad 01 00 00          callq  401096 <phase_4>
  400ee9:       e8 5d 09 00 00          callq  40184b <phase_defused>
  400eee:       bf 38 26 40 00          mov    $0x402638,%edi
  400ef3:       e8 78 fc ff ff          callq  400b70 <puts@plt>
  400ef8:       e8 28 08 00 00          callq  401725 <read_line>
  400efd:       48 89 c7                mov    %rax,%rdi
  400f00:       e8 04 02 00 00          callq  401109 <phase_5>
  400f05:       e8 41 09 00 00          callq  40184b <phase_defused>
  400f0a:       bf 78 25 40 00          mov    $0x402578,%edi
  400f0f:       e8 5c fc ff ff          callq  400b70 <puts@plt>
  400f14:       e8 0c 08 00 00          callq  401725 <read_line>
  400f19:       48 89 c7                mov    %rax,%rdi
  400f1c:       e8 65 02 00 00          callq  401186 <phase_6>
  400f21:       e8 25 09 00 00          callq  40184b <phase_defused>
  400f26:       b8 00 00 00 00          mov    $0x0,%eax
  400f2b:       5b                      pop    %rbx
  400f2c:       c3                      retq

0000000000400f2d <phase_1>:
  400f2d:       48 83 ec 08             sub    $0x8,%rsp                   ;pop 0x8 from the stack
  400f31:       be 5c 26 40 00          mov    $0x40265c,%esi              ;%esi = 0x040265c
  400f36:       e8 a1 04 00 00          callq  4013dc <strings_not_equal>  ;run function 'strings_not_equal'
  400f3b:       85 c0                   test   %eax,%eax                   ;check if %eax is negative/zero/positive
                                                                           ;(probably want it to be 0?)
  400f3d:       74 05                   je     400f44 <phase_1+0x17>       ;if equal (if != 1?), jump to 400f44
  400f3f:       e8 6c 07 00 00          callq  4016b0 <explode_bomb>       ;run 'explode_bomb' - avoid this!
  400f44:       48 83 c4 08             add    $0x8,%rsp                   ;push 0x8 into stack
  400f48:       c3                      retq                               ;end function

0000000000400f49 <phase_2>:
  400f49:       55                      push   %rbp                           ;push %rbp onto stack
  400f4a:       53                      push   %rbx                           ;push %rbx onto stack
  400f4b:       48 83 ec 28             sub    $0x28,%rsp                     ;reserve stack space)
  400f4f:       64 48 8b 04 25 28 00    mov    %fs:0x28,%rax                  ;retrieve canary
  400f56:       00 00
  400f58:       48 89 44 24 18          mov    %rax,0x18(%rsp)                ;copy %rax to %rsp (stack pointer) at 0x1
  400f5d:       31 c0                   xor    %eax,%eax                      ; %eax = 0
  400f5f:       48 89 e6                mov    %rsp,%rsi                      ;copy %rsp to %rsi
  400f62:       e8 7f 07 00 00          callq  4016e6 <read_six_numbers>      ;run read_six_numbers
  400f67:       83 3c 24 00             cmpl   $0x0,(%rsp)                    ;is stack pointer zero?
  400f6b:       79 05                   jns    400f72 <phase_2+0x29>          ;if not signed ('SF = 0'), jump to 400f72
  400f6d:       e8 3e 07 00 00          callq  4016b0 <explode_bomb>          ;BOOM
  400f72:       48 89 e5                mov    %rsp,%rbp                      ;stack poiter -> %rbp
  400f75:       bb 01 00 00 00          mov    $0x1,%ebx                      ;%ebx += 1
  
  400f7a:       89 d8                   mov    %ebx,%eax                      ;copy %ebx -> %eax
  400f7c:       03 45 00                add    0x0(%rbp),%eax                 ;add element at 0x0 to %eax
  400f7f:       39 45 04                cmp    %eax,0x4(%rbp)                 ;compare %eax's current value to 0x4(%rsp)
  400f82:       74 05                   je     400f89 <phase_2+0x40>          ;if equal, jump to 400f89
  400f84:       e8 27 07 00 00          callq  4016b0 <explode_bomb>          ;BOOM
  400f89:       83 c3 01                add    $0x1,%ebx                      ;%ebx += 1
  400f8c:       48 83 c5 04             add    $0x4,%rbp                      
  400f90:       83 fb 06                cmp    $0x6,%ebx                      ;does %ebx = 6?
  400f93:       75 e5                   jne    400f7a <phase_2+0x31>          ;if not equal, jump BACK to 400f7a
  400f95:       48 8b 44 24 18          mov    0x18(%rsp),%rax                
  400f9a:       64 48 33 04 25 28 00    xor    %fs:0x28,%rax                  
  400fa1:       00 00
  400fa3:       74 05                   je     400faa <phase_2+0x61>          
  400fa5:       e8 e6 fb ff ff          callq  400b90 <__stack_chk_fail@plt>  
  400faa:       48 83 c4 28             add    $0x28,%rsp
  400fae:       5b                      pop    %rbx
  400faf:       5d                      pop    %rbp
  400fb0:       c3                      retq

0000000000400fb1 <phase_3>:
  400fb1:       48 83 ec 18             sub    $0x18,%rsp                     ;reserve stack space
  400fb5:       64 48 8b 04 25 28 00    mov    %fs:0x28,%rax
  400fbc:       00 00
  400fbe:       48 89 44 24 08          mov    %rax,0x8(%rsp)                 ;move %rax to (%rsp+8)
  400fc3:       31 c0                   xor    %eax,%eax                      ;%eax = 0
  400fc5:       48 8d 4c 24 04          lea    0x4(%rsp),%rcx                 ; %rcx = (%rsp+4)
  400fca:       48 89 e2                mov    %rsp,%rdx                      ; point --> %rdx
  400fcd:       be 45 29 40 00          mov    $0x402945,%esi                 ; %esi = '0x402945'
  400fd2:       e8 69 fc ff ff          callq  400c40 <__isoc99_sscanf@plt>   ;remember to nexti
                                        ;AT SOME POINT, $EAX INCREMENTS EVERY TIME A NUMBER IS IN THE INPUT
  400fd7:       83 f8 01                cmp    $0x1,%eax                      ; 0x1 > %eax?
  400fda:       7f 05                   jg     400fe1 <phase_3+0x30>          ;if greater, jump to 400fe1
  400fdc:       e8 cf 06 00 00          callq  4016b0 <explode_bomb>          ;B O O M!!!
  
  400fe1:       83 3c 24 07             cmpl   $0x7,(%rsp)                    ;is $0x7 above (%rsp)?
  400fe5:       77 3b                   ja     401022 <phase_3+0x71>          ;if above, jump to 401022 (BOMB!!!)
  
  400fe7:       8b 04 24                mov    (%rsp),%eax                    ; %eax = (%rsp)
  400fea:       ff 24 c5 80 26 40 00    jmpq   *0x402680(,%rax,8)             ;indirect jump to memory location 0x402680 + $rax * 8
  400ff1:       b8 98 00 00 00          mov    $0x98,%eax                     ; $0x98  --> %eax
  400ff6:       eb 3b                   jmp    401033 <phase_3+0x82>          ;jump to 401033
  400ff8:       b8 92 01 00 00          mov    $0x192,%eax                    ; $0x192 --> %eax
  400ffd:       eb 34                   jmp    401033 <phase_3+0x82>          ;jump to 401033
  400fff:       b8 d7 00 00 00          mov    $0xd7,%eax                     ; $0xd7  --> %eax
  401004:       eb 2d                   jmp    401033 <phase_3+0x82>          ;jump to 401033
  401006:       b8 7b 02 00 00          mov    $0x27b,%eax                    ; $0x27b --> %eax
  40100b:       eb 26                   jmp    401033 <phase_3+0x82>          ;jump to 401033
  40100d:       b8 33 01 00 00          mov    $0x133,%eax                    ; $0x133 --> %eax
  401012:       eb 1f                   jmp    401033 <phase_3+0x82>          ;jump to 401033
  401014:       b8 af 02 00 00          mov    $0x2af,%eax                    ; $0x2af --> %eax
  401019:       eb 18                   jmp    401033 <phase_3+0x82>          ;jump to 401033
  40101b:       b8 8e 01 00 00          mov    $0x18e,%eax                    ; $0x18e --> %eax
  401020:       eb 11                   jmp    401033 <phase_3+0x82>          ;jump to 401033
  401022:       e8 89 06 00 00          callq  4016b0 <explode_bomb>          ;B O O M!!!
  
  401027:       b8 00 00 00 00          mov    $0x0,%eax                      ; $0x0   --> %eax
  40102c:       eb 05                   jmp    401033 <phase_3+0x82>          ;jump to 401033
  40102e:       b8 46 00 00 00          mov    $0x46,%eax                     ; $0x46  --> %eax
  401033:       3b 44 24 04             cmp    0x4(%rsp),%eax                 ;compare (%rsp+4) to %eax
  401037:       74 05                   je     40103e <phase_3+0x8d>          ;if equal, jump to 40103e (skip bomb!)
  401039:       e8 72 06 00 00          callq  4016b0 <explode_bomb>          ;B O O M!!!
  
  40103e:       48 8b 44 24 08          mov    0x8(%rsp),%rax                 ;(%rsp+8) --> %rax
  401043:       64 48 33 04 25 28 00    xor    %fs:0x28,%rax
  40104a:       00 00
  40104c:       74 05                   je     401053 <phase_3+0xa2>          ;if equal, jump to 401053
  40104e:       e8 3d fb ff ff          callq  400b90 <__stack_chk_fail@plt>  ;stack check thing...
  401053:       48 83 c4 18             add    $0x18,%rsp                     ;what's the opposite of reserving space?
  401057:       c3                      retq                                  ;return!

0000000000401058 <func4>:
  401058:       48 83 ec 08             sub    $0x8,%rsp             ;reserve stack space
  40105c:       89 d0                   mov    %edx,%eax             ; edx -> eax
  40105e:       29 f0                   sub    %esi,%eax             ; %eax -= %esi
  401060:       89 c1                   mov    %eax,%ecx             ; eax -> ecx
  401062:       c1 e9 1f                shr    $0x1f,%ecx            ;logical right shift by 0x1f in %ecx
  401065:       01 c8                   add    %ecx,%eax             ; %eax += %ecxp
  401067:       d1 f8                   sar    %eax                  ;shift arith. right in %eax
  401069:       8d 0c 30                lea    (%rax,%rsi,1),%ecx    ; %ecx = rax + rsi*1
  40106c:       39 f9                   cmp    %edi,%ecx             ; ecx <= edi ??
  40106e:       7e 0c                   jle    40107c <func4+0x24>   ;if <=, jump to 40107c
  401070:       8d 51 ff                lea    -0x1(%rcx),%edx       ; %edx = %rcx - 1
  401073:       e8 e0 ff ff ff          callq  401058 <func4>        ;run func4 again
  401078:       01 c0                   add    %eax,%eax             ; %eax *= 2
  40107a:       eb 15                   jmp    401091 <func4+0x39>   ;jump to 40191
  
  40107c:       b8 00 00 00 00          mov    $0x0,%eax             ; 0x0 -> %eax
  401081:       39 f9                   cmp    %edi,%ecx             ; ecx >= %edi
  401083:       7d 0c                   jge    401091 <func4+0x39>   ;if >=, jump to 40191
  401085:       8d 71 01                lea    0x1(%rcx),%esi        ; %esi = 1+%rcx
  401088:       e8 cb ff ff ff          callq  401058 <func4>        ;run func4 again
  40108d:       8d 44 00 01             lea    0x1(%rax,%rax,1),%eax ; %eax = 1 + %rax*2
  401091:       48 83 c4 08             add    $0x8,%rsp             ;something with stack idk
  401095:       c3                      retq                         ;return!

0000000000401096 <phase_4>:
  401096:       48 83 ec 18             sub    $0x18,%rsp                     ;reserve stack space
  40109a:       64 48 8b 04 25 28 00    mov    %fs:0x28,%rax
  4010a1:       00 00
  4010a3:       48 89 44 24 08          mov    %rax,0x8(%rsp)                 ; %rax  -> (rsp+8)
  4010a8:       31 c0                   xor    %eax,%eax                      ; %eax = 0
  4010aa:       48 8d 4c 24 04          lea    0x4(%rsp),%rcx                 ; rsp+4 -> %rcx
  4010af:       48 89 e2                mov    %rsp,%rdx                      ; point -> %rdx
  4010b2:       be 45 29 40 00          mov    $0x402945,%esi                 ; %esi = '0x402945'
  4010b7:       e8 84 fb ff ff          callq  400c40 <__isoc99_sscanf@plt>   ;sscanf thing
  4010bc:       83 f8 02                cmp    $0x2,%eax                      ;is %eax = 2?
  4010bf:       75 06                   jne    4010c7 <phase_4+0x31>          ;if !=, jump to 4010c7 (BOMB!!!)
  4010c1:       83 3c 24 0e             cmpl   $0xe,(%rsp)                    ;compare 0xe (dec. 14) and (%rsp)
  4010c5:       76 05                   jbe    4010cc <phase_4+0x36           ;if below or equal, jump to 4010cc (skip bomb!)
  4010c7:       e8 e4 05 00 00          callq  4016b0 <explode_bomb>          ;BOOOOOOOM!!!
  
  4010cc:       ba 0e 00 00 00          mov    $0xe,%edx                      ; 0xe    -> %edx
  4010d1:       be 00 00 00 00          mov    $0x0,%esi                      ; 0x0    -> %esi
  4010d6:       8b 3c 24                mov    (%rsp),%edi                    ; (%rsp) -> %edi
  4010d9:       e8 7a ff ff ff          callq  401058 <func4>                 ;run func4
  4010de:       83 f8 07                cmp    $0x7,%eax                      ;is %eax = 7?
  4010e1:       75 07                   jne    4010ea <phase_4+0x54>          ;if !=, jump to 4010ea (BOMB!!!)
  4010e3:       83 7c 24 04 07          cmpl   $0x7,0x4(%rsp)                 ;does 0x4(%rsp) = 7?
  4010e8:       74 05                   je     4010ef <phase_4+0x59>          ;if equal, jump to 4010ef (skip bomb!)
  4010ea:       e8 c1 05 00 00          callq  4016b0 <explode_bomb>          ;BOOOOOOOM!!!
  4010ef:       48 8b 44 24 08          mov    0x8(%rsp),%rax
  4010f4:       64 48 33 04 25 28 00    xor    %fs:0x28,%rax
  4010fb:       00 00
  4010fd:       74 05                   je     401104 <phase_4+0x6e>
  4010ff:       e8 8c fa ff ff          callq  400b90 <__stack_chk_fail@plt>
  401104:       48 83 c4 18             add    $0x18,%rsp
  401108:       c3                      retq

0000000000401109 <phase_5>:
  401109:       53                      push   %rbx                           ;push rbx onto stack
  40110a:       48 83 ec 10             sub    $0x10,%rsp                     ;reserve space in stack
  40110e:       48 89 fb                mov    %rdi,%rbx                      ; rdi -> rbx
  401111:       64 48 8b 04 25 28 00    mov    %fs:0x28,%rax
  401118:       00 00
  40111a:       48 89 44 24 08          mov    %rax,0x8(%rsp)                 ; rax -> rsp+8
  40111f:       31 c0                   xor    %eax,%eax                      ; eax = 0
  401121:       e8 98 02 00 00          callq  4013be <string_length>         ;run string_length
  401126:       83 f8 06                cmp    $0x6,%eax                      ;is eax (strlen?) = 6
  401129:       74 05                   je     401130 <phase_5+0x27>          ;if equal, jump to 401130 (skip bomb!)
  40112b:       e8 80 05 00 00          callq  4016b0 <explode_bomb>          ;BOOOOOOOM!!!
  401130:       b8 00 00 00 00          mov    $0x0,%eax                      ; eax = 0
  
  401135:       0f b6 14 03             movzbl (%rbx,%rax,1),%edx             ; move zero-extended byte to double word
                                                                              ; (rbx + rax * 1) -> edx
  401139:       83 e2 0f                and    $0xf,%edx                      ; edx & 0xf (15 decimal)
  40113c:       0f b6 92 c0 26 40 00    movzbl 0x4026c0(%rdx),%edx            ; move zero-extended byte to double word
                                                                              ; (0x4026c0) -> edx
  401143:       88 14 04                mov    %dl,(%rsp,%rax,1)              ; dl -> (rsp + rax*1)
  401146:       48 83 c0 01             add    $0x1,%rax                      ; rax += 1
  40114a:       48 83 f8 06             cmp    $0x6,%rax                      ; is rax = 6?
  40114e:       75 e5                   jne    401135 <phase_5+0x2c>          ;if NOT equal, jump to 401135 (loop)
  
  401150:       c6 44 24 06 00          movb   $0x0,0x6(%rsp)                 ; 0x0 -> rsp+6
  401155:       be 79 26 40 00          mov    $0x402679,%esi                 ; 0x402679 -> esi = "flyers"
  40115a:       48 89 e7                mov    %rsp,%rdi                      ; pointer -> rdi
  40115d:       e8 7a 02 00 00          callq  4013dc <strings_not_equal>     ;run strings_not_equal
  401162:       85 c0                   test   %eax,%eax                      ;is eax negative/zero/positive?
  401164:       74 05                   je     40116b <phase_5+0x62>          ;if equal, jump to 40116b (skip bomb!)
  401166:       e8 45 05 00 00          callq  4016b0 <explode_bomb>          ;BOOOOOOOM!!!
  40116b:       48 8b 44 24 08          mov    0x8(%rsp),%rax                 ; rsp+8 -> rax
  401170:       64 48 33 04 25 28 00    xor    %fs:0x28,%rax                  
  401177:       00 00
  401179:       74 05                   je     401180 <phase_5+0x77>          ;if equal, jump to 401180
  40117b:       e8 10 fa ff ff          callq  400b90 <__stack_chk_fail@plt>  ;stack check thing
  401180:       48 83 c4 10             add    $0x10,%rsp                     
  401184:       5b                      pop    %rbx                           ;pop rbx from stack
  401185:       c3                      retq

0000000000401186 <phase_6>:
  401186:       41 56                   push   %r14                     ; ...
  401188:       41 55                   push   %r13                     ; ...
  40118a:       41 54                   push   %r12                     ; ...
  40118c:       55                      push   %rbp                     ; ...
  40118d:       53                      push   %rbx                     ; push r14, r13, r12, rbp and rbx onto stack
  40118e:       48 83 ec 60             sub    $0x60,%rsp               ; reserve stack space
  401192:       64 48 8b 04 25 28 00    mov    %fs:0x28,%rax
  401199:       00 00
  40119b:       48 89 44 24 58          mov    %rax,0x58(%rsp)          ; 
  4011a0:       31 c0                   xor    %eax,%eax                ;eax = 0
  4011a2:       48 89 e6                mov    %rsp,%rsi
  4011a5:       e8 3c 05 00 00          callq  4016e6 <read_six_numbers>; phase_6 expects six numbers 
  4011aa:       49 89 e4                mov    %rsp,%r12
  4011ad:       49 89 e5                mov    %rsp,%r13
  4011b0:       41 be 00 00 00 00       mov    $0x0,%r14d
  
  4011b6:       4c 89 ed                mov    %r13,%rbp
  4011b9:       41 8b 45 00             mov    0x0(%r13),%eax
  4011bd:       83 e8 01                sub    $0x1,%eax
  4011c0:       83 f8 05                cmp    $0x5,%eax                ;is number being read <= 5?
  4011c3:       76 05                   jbe    4011ca <phase_6+0x44>    ;if below or equal, jump to 4011ca (skip bomb)
  4011c5:       e8 e6 04 00 00          callq  4016b0 <explode_bomb>    ;BOOM!!!!!
  4011ca:       41 83 c6 01             add    $0x1,%r14d               ; r14d++
  4011ce:       41 83 fe 06             cmp    $0x6,%r14d
  4011d2:       74 21                   je     4011f5 <phase_6+0x6f>    ;if equal, jump to 4011f5
  4011d4:       44 89 f3                mov    %r14d,%ebx
  4011d7:       48 63 c3                movslq %ebx,%rax
  4011da:       8b 04 84                mov    (%rsp,%rax,4),%eax
  4011dd:       39 45 00                cmp    %eax,0x0(%rbp)
  4011e0:       75 05                   jne    4011e7 <phase_6+0x61>    ;if !=, jump to 4011e7 (skip bomb)
  4011e2:       e8 c9 04 00 00          callq  4016b0 <explode_bomb>    ;BOOM!!!!!
  4011e7:       83 c3 01                add    $0x1,%ebx
  4011ea:       83 fb 05                cmp    $0x5,%ebx                ;
  4011ed:       7e e8                   jle    4011d7 <phase_6+0x51>    ;if <=, loop back to 4011d7
  4011ef:       49 83 c5 04             add    $0x4,%r13
  4011f3:       eb c1                   jmp    4011b6 <phase_6+0x30>    ;loop back to 4011b6
  
  4011f5:       48 8d 4c 24 18          lea    0x18(%rsp),%rcx
  4011fa:       ba 07 00 00 00          mov    $0x7,%edx
  
  4011ff:       89 d0                   mov    %edx,%eax
  401201:       41 2b 04 24             sub    (%r12),%eax
  401205:       41 89 04 24             mov    %eax,(%r12)
  401209:       49 83 c4 04             add    $0x4,%r12
  40120d:       4c 39 e1                cmp    %r12,%rcx
  401210:       75 ed                   jne    4011ff <phase_6+0x79>    ;if !=, loop back to 4011ff
  
  401212:       be 00 00 00 00          mov    $0x0,%esi
  401217:       eb 1a                   jmp    401233 <phase_6+0xad>    ;jump to 401233
  
  401219:       48 8b 52 08             mov    0x8(%rdx),%rdx
  40121d:       83 c0 01                add    $0x1,%eax
  401220:       39 c8                   cmp    %ecx,%eax
  401222:       75 f5                   jne    401219 <phase_6+0x93>    ;if !=, loop back to 401219
  401224:       48 89 54 74 20          mov    %rdx,0x20(%rsp,%rsi,2)
  401229:       48 83 c6 04             add    $0x4,%rsi
  40122d:       48 83 fe 18             cmp    $0x18,%rsi
  401231:       74 14                   je     401247 <phase_6+0xc1>    ;if equal, jump to 401247
  401233:       8b 0c 34                mov    (%rsp,%rsi,1),%ecx       ; 
  401236:       b8 01 00 00 00          mov    $0x1,%eax                ; 
  40123b:       ba f0 42 60 00          mov    $0x6042f0,%edx           ; 
  401240:       83 f9 01                cmp    $0x1,%ecx                ; 
  401243:       7f d4                   jg     401219 <phase_6+0x93>    ;if !=, loop back to 401219
  401245:       eb dd                   jmp    401224 <phase_6+0x9e>    ;loop back to 401224
  
  401247:       48 8b 5c 24 20          mov    0x20(%rsp),%rbx
  40124c:       48 8d 44 24 20          lea    0x20(%rsp),%rax
  401251:       48 8d 74 24 48          lea    0x48(%rsp),%rsi
  401256:       48 89 d9                mov    %rbx,%rcx
  
  401259:       48 8b 50 08             mov    0x8(%rax),%rdx
  40125d:       48 89 51 08             mov    %rdx,0x8(%rcx)
  401261:       48 83 c0 08             add    $0x8,%rax
  401265:       48 89 d1                mov    %rdx,%rcx
  401268:       48 39 c6                cmp    %rax,%rsi
  40126b:       75 ec                   jne    401259 <phase_6+0xd3>    ;if !=, loop back to 401259
  40126d:       48 c7 42 08 00 00 00    movq   $0x0,0x8(%rdx)
  401274:       00
  401275:       bd 05 00 00 00          mov    $0x5,%ebp
  40127e:       8b 00                   mov    (%rax),%eax
  401280:       39 03                   cmp    %eax,(%rbx)
  401282:       7d 05                   jge    401289 <phase_6+0x103>   ;if >=. jump to 401289 (skip bomb)
  401284:       e8 27 04 00 00          callq  4016b0 <explode_bomb>    ;BOOM!!!!!
  401289:       48 8b 5b 08             mov    0x8(%rbx),%rbx           ;advance to next number
  40128d:       83 ed 01                sub    $0x1,%ebp    
  401290:       75 e8                   jne    40127a <phase_6+0xf4>
  401292:       48 8b 44 24 58          mov    0x58(%rsp),%rax
  401297:       64 48 33 04 25 28 00    xor    %fs:0x28,%rax
  40129e:       00 00
  4012a0:       74 05                   je     4012a7 <phase_6+0x121>         ;if equal, jump to 4012a7
  4012a2:       e8 e9 f8 ff ff          callq  400b90 <__stack_chk_fail@plt>
  4012a7:       48 83 c4 60             add    $0x60,%rsp
  4012ab:       5b                      pop    %rbx                     ; ...
  4012ac:       5d                      pop    %rbp                     ; ...
  4012ad:       41 5c                   pop    %r12                     ; ...
  4012af:       41 5d                   pop    %r13                     ; ...
  4012b1:       41 5e                   pop    %r14                     ; pop rbx, rbp, r12, r13 and r14 from stack
  4012b3:       c3                      retq                            ;return!!

00000000004012b4 <fun7>:
  4012b4:       48 83 ec 08             sub    $0x8,%rsp
  4012b8:       48 85 ff                test   %rdi,%rdi
  4012bb:       74 2b                   je     4012e8 <fun7+0x34>
  4012bd:       8b 17                   mov    (%rdi),%edx
  4012bf:       39 f2                   cmp    %esi,%edx
  4012c1:       7e 0d                   jle    4012d0 <fun7+0x1c>
  4012c3:       48 8b 7f 08             mov    0x8(%rdi),%rdi
  4012c7:       e8 e8 ff ff ff          callq  4012b4 <fun7>
  4012cc:       01 c0                   add    %eax,%eax
  4012ce:       eb 1d                   jmp    4012ed <fun7+0x39>
  4012d0:       b8 00 00 00 00          mov    $0x0,%eax
  4012d5:       39 f2                   cmp    %esi,%edx
  4012d7:       74 14                   je     4012ed <fun7+0x39>
  4012d9:       48 8b 7f 10             mov    0x10(%rdi),%rdi
  4012dd:       e8 d2 ff ff ff          callq  4012b4 <fun7>
  4012e2:       8d 44 00 01             lea    0x1(%rax,%rax,1),%eax
  4012e6:       eb 05                   jmp    4012ed <fun7+0x39>
  4012e8:       b8 ff ff ff ff          mov    $0xffffffff,%eax
  4012ed:       48 83 c4 08             add    $0x8,%rsp
  4012f1:       c3                      retq

00000000004012f2 <secret_phase>:
  4012f2:       53                      push   %rbx
  4012f3:       e8 2d 04 00 00          callq  401725 <read_line>
  4012f8:       ba 0a 00 00 00          mov    $0xa,%edx
  4012fd:       be 00 00 00 00          mov    $0x0,%esi
  401302:       48 89 c7                mov    %rax,%rdi
  401305:       e8 16 f9 ff ff          callq  400c20 <strtol@plt>
  40130a:       48 89 c3                mov    %rax,%rbx
  40130d:       8d 40 ff                lea    -0x1(%rax),%eax
  401310:       3d e8 03 00 00          cmp    $0x3e8,%eax
  401315:       76 05                   jbe    40131c <secret_phase+0x2a>
  401317:       e8 94 03 00 00          callq  4016b0 <explode_bomb>
  40131c:       89 de                   mov    %ebx,%esi
  40131e:       bf 10 41 60 00          mov    $0x604110,%edi
  401323:       e8 8c ff ff ff          callq  4012b4 <fun7>
  401328:       83 f8 07                cmp    $0x7,%eax
  40132b:       74 05                   je     401332 <secret_phase+0x40>
  40132d:       e8 7e 03 00 00          callq  4016b0 <explode_bomb>
  401332:       bf d0 26 40 00          mov    $0x4026d0,%edi
  401337:       e8 34 f8 ff ff          callq  400b70 <puts@plt>
  40133c:       e8 0a 05 00 00          callq  40184b <phase_defused>
  401341:       5b                      pop    %rbx
  401342:       c3                      retq

0000000000401343 <sig_handler>:
  401343:       48 83 ec 08             sub    $0x8,%rsp
  401347:       bf f8 26 40 00          mov    $0x4026f8,%edi
  40134c:       e8 1f f8 ff ff          callq  400b70 <puts@plt>
  401351:       bf 03 00 00 00          mov    $0x3,%edi
  401356:       e8 55 f9 ff ff          callq  400cb0 <sleep@plt>
  40135b:       be c1 28 40 00          mov    $0x4028c1,%esi
  401360:       bf 01 00 00 00          mov    $0x1,%edi
  401365:       b8 00 00 00 00          mov    $0x0,%eax
  40136a:       e8 e1 f8 ff ff          callq  400c50 <__printf_chk@plt>
  40136f:       48 8b 3d 0a 34 20 00    mov    0x20340a(%rip),%rdi        # 604780 <__TMC_END__>
  401376:       e8 b5 f8 ff ff          callq  400c30 <fflush@plt>
  40137b:       bf 01 00 00 00          mov    $0x1,%edi
  401380:       e8 2b f9 ff ff          callq  400cb0 <sleep@plt>
  401385:       bf c9 28 40 00          mov    $0x4028c9,%edi
  40138a:       e8 e1 f7 ff ff          callq  400b70 <puts@plt>
  40138f:       bf 10 00 00 00          mov    $0x10,%edi
  401394:       e8 e7 f8 ff ff          callq  400c80 <exit@plt>

0000000000401399 <invalid_phase>:
  401399:       48 83 ec 08             sub    $0x8,%rsp
  40139d:       48 89 fa                mov    %rdi,%rdx
  4013a0:       be d1 28 40 00          mov    $0x4028d1,%esi
  4013a5:       bf 01 00 00 00          mov    $0x1,%edi
  4013aa:       b8 00 00 00 00          mov    $0x0,%eax
  4013af:       e8 9c f8 ff ff          callq  400c50 <__printf_chk@plt>
  4013b4:       bf 08 00 00 00          mov    $0x8,%edi
  4013b9:       e8 c2 f8 ff ff          callq  400c80 <exit@plt>

00000000004013be <string_length>:
  4013be:       80 3f 00                cmpb   $0x0,(%rdi)                 ;check if %rdi = 0?
  4013c1:       74 13                   je     4013d6 <string_length+0x18> ;if equal, jump to 4013d6
  4013c3:       b8 00 00 00 00          mov    $0x0,%eax                   ;%eax = 0
  
  4013c8:       48 83 c7 01             add    $0x1,%rdi                   ;advance 1 byte in %rdi (next char in str?)
  4013cc:       83 c0 01                add    $0x1,%eax                   ;%eax++
  4013cf:       80 3f 00                cmpb   $0x0,(%rdi)                 ;check if %rdi = 0?
  4013d2:       75 f4                   jne    4013c8 <string_length+0xa>  ;if NOT equal, jump BACK to 4013d8 (loop)
  4013d4:       f3 c3                   repz retq                          ;repeat while zero - return
  
  4013d6:       b8 00 00 00 00          mov    $0x0,%eax                   ;%eax = 0
  4013db:       c3                      retq                               ;return

00000000004013dc <strings_not_equal>:
  4013dc:       41 54                   push   %r12                              ;push %r12 onto stack
  4013de:       55                      push   %rbp                              ;push %rbp onto stack
  4013df:       53                      push   %rbx                              ;push %rbx onto stack
  4013e0:       48 89 fb                mov    %rdi,%rbx                         ;copy %rdi to %rdx
  4013e3:       48 89 f5                mov    %rsi,%rbp                         ;copy %rsi to %rbp
  4013e6:       e8 d3 ff ff ff          callq  4013be <string_length>            ;run string_length
  4013eb:       41 89 c4                mov    %eax,%r12d                        ;copy %eax to %r12d
  4013ee:       48 89 ef                mov    %rbp,%rdi                         ;copy %rbp to %rdi
  4013f1:       e8 c8 ff ff ff          callq  4013be <string_length>            ;run string_length
  4013f6:       ba 01 00 00 00          mov    $0x1,%edx                         ;%edx = 0x1
                                        ;FIRST CHECK: Is the length of the input equal to the expected string (28)?
  4013fb:       41 39 c4                cmp    %eax,%r12d                        ;compare int %eax to %r12d
  4013fe:       75 3c                   jne    40143c <strings_not_equal+0x60>   ;if NOT equal, jump to 40143c
  401400:       0f b6 03                movzbl (%rbx),%eax                       ;move zero-extended byte to long: %rbx -> %eax
  401403:       84 c0                   test   %al,%al                           ;check if %al is negative/zero/positive
  401405:       74 22                   je     401429 <strings_not_equal+0x4d>   ;if equal, jump to 401429
                                        ;SECOND CHECK?
  401407:       3a 45 00                cmp    0x0(%rbp),%al                     ;compare %rbp to %al
  40140a:       74 07                   je     401413 <strings_not_equal+0x37>   ;if equal, jump to 401413
  40140c:       eb 22                   jmp    401430 <strings_not_equal+0x54>   ;jump to 401430
  40140e:       3a 45 00                cmp    0x0(%rbp),%al                     ;compare %rbp (starting at 0x0?) to %al
  401411:       75 24                   jne    401437 <strings_not_equal+0x5b>   ;if NOT equal, jump to 401437
  401413:       48 83 c3 01             add    $0x1,%rbx                         ;%rbx ++
  401417:       48 83 c5 01             add    $0x1,%rbp                         ;%rbp ++
  40141b:       0f b6 03                movzbl (%rbx),%eax                       ;move zero-extended byte to long: %rbx->%eax
  40141e:       84 c0                   test   %al,%al                           ;check if %al is negative/zero/positive
  401420:       75 ec                   jne    40140e <strings_not_equal+0x32>   ;if NOT equal, jump to 40140e
  401422:       ba 00 00 00 00          mov    $0x0,%edx                         ;%edx = 0
  401427:       eb 13                   jmp    40143c <strings_not_equal+0x60>   ;jump to 40143c
  401429:       ba 00 00 00 00          mov    $0x0,%edx                         ;%edx = 0
  40142e:       eb 0c                   jmp    40143c <strings_not_equal+0x60>   ;jump to 40143c
  401430:       ba 01 00 00 00          mov    $0x1,%edx                         ;%edx = 1
  401435:       eb 05                   jmp    40143c <strings_not_equal+0x60>   ;jump to 40143c
  401437:       ba 01 00 00 00          mov    $0x1,%edx                         ;%edx = 1
  40143c:       89 d0                   mov    %edx,%eax                         ;copy %edx to %eax
  40143e:       5b                      pop    %rbx                              ;pop %rbx from stack
  40143f:       5d                      pop    %rbp                              ;pop %rpb from stack
  401440:       41 5c                   pop    %r12                              ;pop %r12 from stack
  401442:       c3                      retq                                     ;return

0000000000401443 <initialize_bomb>:
  401443:       53                      push   %rbx
  401444:       48 81 ec 50 20 00 00    sub    $0x2050,%rsp
  40144b:       64 48 8b 04 25 28 00    mov    %fs:0x28,%rax
  401452:       00 00
  401454:       48 89 84 24 48 20 00    mov    %rax,0x2048(%rsp)
  40145b:       00
  40145c:       31 c0                   xor    %eax,%eax
  40145e:       be 43 13 40 00          mov    $0x401343,%esi
  401463:       bf 02 00 00 00          mov    $0x2,%edi
  401468:       e8 83 f7 ff ff          callq  400bf0 <signal@plt>
  40146d:       be 40 00 00 00          mov    $0x40,%esi
  401472:       48 89 e7                mov    %rsp,%rdi
  401475:       e8 f6 f7 ff ff          callq  400c70 <gethostname@plt>
  40147a:       85 c0                   test   %eax,%eax
  40147c:       75 13                   jne    401491 <initialize_bomb+0x4e>
  40147e:       48 8b 3d fb 2e 20 00    mov    0x202efb(%rip),%rdi        # 604380 <host_table>
  401485:       bb 88 43 60 00          mov    $0x604388,%ebx
  40148a:       48 85 ff                test   %rdi,%rdi
  40148d:       75 16                   jne    4014a5 <initialize_bomb+0x62>
  40148f:       eb 52                   jmp    4014e3 <initialize_bomb+0xa0>
  401491:       bf 30 27 40 00          mov    $0x402730,%edi
  401496:       e8 d5 f6 ff ff          callq  400b70 <puts@plt>
  40149b:       bf 08 00 00 00          mov    $0x8,%edi
  4014a0:       e8 db f7 ff ff          callq  400c80 <exit@plt>
  4014a5:       48 89 e6                mov    %rsp,%rsi
  4014a8:       e8 93 f6 ff ff          callq  400b40 <strcasecmp@plt>
  4014ad:       85 c0                   test   %eax,%eax
  4014af:       74 46                   je     4014f7 <initialize_bomb+0xb4>
  4014b1:       48 83 c3 08             add    $0x8,%rbx
  4014b5:       48 8b 7b f8             mov    -0x8(%rbx),%rdi
  4014b9:       48 85 ff                test   %rdi,%rdi
  4014bc:       75 e7                   jne    4014a5 <initialize_bomb+0x62>
  4014be:       eb 23                   jmp    4014e3 <initialize_bomb+0xa0>
  4014c0:       48 8d 54 24 40          lea    0x40(%rsp),%rdx
  4014c5:       be e2 28 40 00          mov    $0x4028e2,%esi
  4014ca:       bf 01 00 00 00          mov    $0x1,%edi
  4014cf:       b8 00 00 00 00          mov    $0x0,%eax
  4014d4:       e8 77 f7 ff ff          callq  400c50 <__printf_chk@plt>
  4014d9:       bf 08 00 00 00          mov    $0x8,%edi
  4014de:       e8 9d f7 ff ff          callq  400c80 <exit@plt>
  4014e3:       bf 68 27 40 00          mov    $0x402768,%edi
  4014e8:       e8 83 f6 ff ff          callq  400b70 <puts@plt>
  4014ed:       bf 08 00 00 00          mov    $0x8,%edi
  4014f2:       e8 89 f7 ff ff          callq  400c80 <exit@plt>
  4014f7:       48 8d 7c 24 40          lea    0x40(%rsp),%rdi
  4014fc:       e8 49 0d 00 00          callq  40224a <init_driver>
  401501:       85 c0                   test   %eax,%eax
  401503:       78 bb                   js     4014c0 <initialize_bomb+0x7d>
  401505:       48 8b 84 24 48 20 00    mov    0x2048(%rsp),%rax
  40150c:       00
  40150d:       64 48 33 04 25 28 00    xor    %fs:0x28,%rax
  401514:       00 00
  401516:       74 05                   je     40151d <initialize_bomb+0xda>
  401518:       e8 73 f6 ff ff          callq  400b90 <__stack_chk_fail@plt>
  40151d:       48 81 c4 50 20 00 00    add    $0x2050,%rsp
  401524:       5b                      pop    %rbx
  401525:       c3                      retq

0000000000401526 <initialize_bomb_solve>:
  401526:       f3 c3                   repz retq

0000000000401528 <blank_line>:
  401528:       55                      push   %rbp
  401529:       53                      push   %rbx
  40152a:       48 83 ec 08             sub    $0x8,%rsp
  40152e:       48 89 fd                mov    %rdi,%rbp
  401531:       eb 17                   jmp    40154a <blank_line+0x22>
  401533:       e8 88 f7 ff ff          callq  400cc0 <__ctype_b_loc@plt>
  401538:       48 83 c5 01             add    $0x1,%rbp
  40153c:       48 0f be db             movsbq %bl,%rbx
  401540:       48 8b 00                mov    (%rax),%rax
  401543:       f6 44 58 01 20          testb  $0x20,0x1(%rax,%rbx,2)
  401548:       74 0f                   je     401559 <blank_line+0x31>
  40154a:       0f b6 5d 00             movzbl 0x0(%rbp),%ebx
  40154e:       84 db                   test   %bl,%bl
  401550:       75 e1                   jne    401533 <blank_line+0xb>
  401552:       b8 01 00 00 00          mov    $0x1,%eax
  401557:       eb 05                   jmp    40155e <blank_line+0x36>
  401559:       b8 00 00 00 00          mov    $0x0,%eax
  40155e:       48 83 c4 08             add    $0x8,%rsp
  401562:       5b                      pop    %rbx
  401563:       5d                      pop    %rbp
  401564:       c3                      retq

0000000000401565 <skip>:
  401565:       53                      push   %rbx
  401566:       48 63 05 3f 32 20 00    movslq 0x20323f(%rip),%rax        # 6047ac <num_input_strings>
  40156d:       48 8d 3c 80             lea    (%rax,%rax,4),%rdi
  401571:       48 c1 e7 04             shl    $0x4,%rdi
  401575:       48 81 c7 c0 47 60 00    add    $0x6047c0,%rdi
  40157c:       48 8b 15 2d 32 20 00    mov    0x20322d(%rip),%rdx        # 6047b0 <infile>
  401583:       be 50 00 00 00          mov    $0x50,%esi
  401588:       e8 53 f6 ff ff          callq  400be0 <fgets@plt>
  40158d:       48 89 c3                mov    %rax,%rbx
  401590:       48 85 c0                test   %rax,%rax
  401593:       74 0c                   je     4015a1 <skip+0x3c>
  401595:       48 89 c7                mov    %rax,%rdi
  401598:       e8 8b ff ff ff          callq  401528 <blank_line>
  40159d:       85 c0                   test   %eax,%eax
  40159f:       75 c5                   jne    401566 <skip+0x1>
  4015a1:       48 89 d8                mov    %rbx,%rax
  4015a4:       5b                      pop    %rbx
  4015a5:       c3                      retq

00000000004015a6 <send_msg>:
  4015a6:       48 81 ec 18 40 00 00    sub    $0x4018,%rsp
  4015ad:       41 89 f8                mov    %edi,%r8d
  4015b0:       64 48 8b 04 25 28 00    mov    %fs:0x28,%rax
  4015b7:       00 00
  4015b9:       48 89 84 24 08 40 00    mov    %rax,0x4008(%rsp)
  4015c0:       00
  4015c1:       31 c0                   xor    %eax,%eax
  4015c3:       8b 35 e3 31 20 00       mov    0x2031e3(%rip),%esi        # 6047ac <num_input_strings>
  4015c9:       8d 46 ff                lea    -0x1(%rsi),%eax
  4015cc:       48 98                   cltq
  4015ce:       48 8d 14 80             lea    (%rax,%rax,4),%rdx
  4015d2:       48 c1 e2 04             shl    $0x4,%rdx
  4015d6:       48 81 c2 c0 47 60 00    add    $0x6047c0,%rdx
  4015dd:       b8 00 00 00 00          mov    $0x0,%eax
  4015e2:       48 c7 c1 ff ff ff ff    mov    $0xffffffffffffffff,%rcx
  4015e9:       48 89 d7                mov    %rdx,%rdi
  4015ec:       f2 ae                   repnz scas %es:(%rdi),%al
  4015ee:       48 f7 d1                not    %rcx
  4015f1:       48 83 c1 63             add    $0x63,%rcx
  4015f5:       48 81 f9 00 20 00 00    cmp    $0x2000,%rcx
  4015fc:       76 19                   jbe    401617 <send_msg+0x71>
  4015fe:       be a0 27 40 00          mov    $0x4027a0,%esi
  401603:       bf 01 00 00 00          mov    $0x1,%edi
  401608:       e8 43 f6 ff ff          callq  400c50 <__printf_chk@plt>
  40160d:       bf 08 00 00 00          mov    $0x8,%edi
  401612:       e8 69 f6 ff ff          callq  400c80 <exit@plt>
  401617:       45 85 c0                test   %r8d,%r8d
  40161a:       41 b9 04 29 40 00       mov    $0x402904,%r9d
  401620:       b8 fc 28 40 00          mov    $0x4028fc,%eax
  401625:       4c 0f 45 c8             cmovne %rax,%r9
  401629:       52                      push   %rdx
  40162a:       56                      push   %rsi
  40162b:       44 8b 05 42 2d 20 00    mov    0x202d42(%rip),%r8d        # 604374 <bomb_id>
  401632:       b9 0d 29 40 00          mov    $0x40290d,%ecx
  401637:       ba 00 20 00 00          mov    $0x2000,%edx
  40163c:       be 01 00 00 00          mov    $0x1,%esi
  401641:       48 8d 7c 24 10          lea    0x10(%rsp),%rdi
  401646:       b8 00 00 00 00          mov    $0x0,%eax
  40164b:       e8 80 f6 ff ff          callq  400cd0 <__sprintf_chk@plt>
  401650:       4c 8d 84 24 10 20 00    lea    0x2010(%rsp),%r8
  401657:       00
  401658:       b9 00 00 00 00          mov    $0x0,%ecx
  40165d:       48 8d 54 24 10          lea    0x10(%rsp),%rdx
  401662:       be 50 43 60 00          mov    $0x604350,%esi
  401667:       bf 68 43 60 00          mov    $0x604368,%edi
  40166c:       e8 ae 0d 00 00          callq  40241f <driver_post>
  401671:       48 83 c4 10             add    $0x10,%rsp
  401675:       85 c0                   test   %eax,%eax
  401677:       79 17                   jns    401690 <send_msg+0xea>
  401679:       48 8d bc 24 00 20 00    lea    0x2000(%rsp),%rdi
  401680:       00
  401681:       e8 ea f4 ff ff          callq  400b70 <puts@plt>
  401686:       bf 00 00 00 00          mov    $0x0,%edi
  40168b:       e8 f0 f5 ff ff          callq  400c80 <exit@plt>
  401690:       48 8b 84 24 08 40 00    mov    0x4008(%rsp),%rax
  401697:       00
  401698:       64 48 33 04 25 28 00    xor    %fs:0x28,%rax
  40169f:       00 00
  4016a1:       74 05                   je     4016a8 <send_msg+0x102>
  4016a3:       e8 e8 f4 ff ff          callq  400b90 <__stack_chk_fail@plt>
  4016a8:       48 81 c4 18 40 00 00    add    $0x4018,%rsp
  4016af:       c3                      retq

00000000004016b0 <explode_bomb>:
  4016b0:       48 83 ec 08             sub    $0x8,%rsp
  4016b4:       bf 19 29 40 00          mov    $0x402919,%edi
  4016b9:       e8 b2 f4 ff ff          callq  400b70 <puts@plt>
  4016be:       bf 22 29 40 00          mov    $0x402922,%edi
  4016c3:       e8 a8 f4 ff ff          callq  400b70 <puts@plt>
  4016c8:       bf 00 00 00 00          mov    $0x0,%edi
  4016cd:       e8 d4 fe ff ff          callq  4015a6 <send_msg>
  4016d2:       bf c8 27 40 00          mov    $0x4027c8,%edi
  4016d7:       e8 94 f4 ff ff          callq  400b70 <puts@plt>
  4016dc:       bf 08 00 00 00          mov    $0x8,%edi
  4016e1:       e8 9a f5 ff ff          callq  400c80 <exit@plt>

00000000004016e6 <read_six_numbers>:
  4016e6:       48 83 ec 08             sub    $0x8,%rsp                      ;reserve 8 bytes of stack space
  4016ea:       48 89 f2                mov    %rsi,%rdx                      ;copy %rsi to %rdx
  4016ed:       48 8d 4e 04             lea    0x4(%rsi),%rcx                 ;copy effective address of 0x4(%rsi) to %rcx
                                                                              ;(%rcx = 4+%rsi)
  4016f1:       48 8d 46 14             lea    0x14(%rsi),%rax                ;%rax = 20+%rsi
  4016f5:       50                      push   %rax                           ;push %rax onto the stack
  4016f6:       48 8d 46 10             lea    0x10(%rsi),%rax                ;%rax = 10+%rsi
  4016fa:       50                      push   %rax                           ;push %rax onto the stack
  4016fb:       4c 8d 4e 0c             lea    0xc(%rsi),%r9                  ;%r9 = 12+%rsi
  4016ff:       4c 8d 46 08             lea    0x8(%rsi),%r8                  ;%r8 = 8+%rsi
  401703:       be 39 29 40 00          mov    $0x402939,%esi                 ;%esi = 0x402939 (decimal 4204857)
  401708:       b8 00 00 00 00          mov    $0x0,%eax                      ;%eax = 0
  40170d:       e8 2e f5 ff ff          callq  400c40 <__isoc99_sscanf@plt>   ;runs some sscanf method thing
  401712:       48 83 c4 10             add    $0x10,%rsp                     ;%rsp += decimal 16
  401716:       83 f8 05                cmp    $0x5,%eax                      ;compare decimal 5 to %eax
  401719:       7f 05                   jg     401720 <read_six_numbers+0x3a> ;if greater, jump to 401720
  40171b:       e8 90 ff ff ff          callq  4016b0 <explode_bomb>          ;BOOM!!!
  401720:       48 83 c4 08             add    $0x8,%rsp                      ;%rsp += decimal 8
  401724:       c3                      retq                                  ;return

0000000000401725 <read_line>:
  401725:       48 83 ec 08             sub    $0x8,%rsp
  401729:       b8 00 00 00 00          mov    $0x0,%eax
  40172e:       e8 32 fe ff ff          callq  401565 <skip>
  401733:       48 85 c0                test   %rax,%rax
  401736:       75 6e                   jne    4017a6 <read_line+0x81>
  401738:       48 8b 05 51 30 20 00    mov    0x203051(%rip),%rax        # 604790 <stdin@@GLIBC_2.2.5>
  40173f:       48 39 05 6a 30 20 00    cmp    %rax,0x20306a(%rip)        # 6047b0 <infile>
  401746:       75 14                   jne    40175c <read_line+0x37>
  401748:       bf 4b 29 40 00          mov    $0x40294b,%edi
  40174d:       e8 1e f4 ff ff          callq  400b70 <puts@plt>
  401752:       bf 08 00 00 00          mov    $0x8,%edi
  401757:       e8 24 f5 ff ff          callq  400c80 <exit@plt>
  40175c:       bf 69 29 40 00          mov    $0x402969,%edi
  401761:       e8 ca f3 ff ff          callq  400b30 <getenv@plt>
  401766:       48 85 c0                test   %rax,%rax
  401769:       74 0a                   je     401775 <read_line+0x50>
  40176b:       bf 00 00 00 00          mov    $0x0,%edi
  401770:       e8 0b f5 ff ff          callq  400c80 <exit@plt>
  401775:       48 8b 05 14 30 20 00    mov    0x203014(%rip),%rax        # 604790 <stdin@@GLIBC_2.2.5>
  40177c:       48 89 05 2d 30 20 00    mov    %rax,0x20302d(%rip)        # 6047b0 <infile>
  401783:       b8 00 00 00 00          mov    $0x0,%eax
  401788:       e8 d8 fd ff ff          callq  401565 <skip>
  40178d:       48 85 c0                test   %rax,%rax
  401790:       75 14                   jne    4017a6 <read_line+0x81>
  401792:       bf 4b 29 40 00          mov    $0x40294b,%edi
  401797:       e8 d4 f3 ff ff          callq  400b70 <puts@plt>
  40179c:       bf 00 00 00 00          mov    $0x0,%edi
  4017a1:       e8 da f4 ff ff          callq  400c80 <exit@plt>
  4017a6:       8b 35 00 30 20 00       mov    0x203000(%rip),%esi        # 6047ac <num_input_strings>
  4017ac:       48 63 c6                movslq %esi,%rax
  4017af:       48 8d 14 80             lea    (%rax,%rax,4),%rdx
  4017b3:       48 c1 e2 04             shl    $0x4,%rdx
  4017b7:       48 81 c2 c0 47 60 00    add    $0x6047c0,%rdx
  4017be:       b8 00 00 00 00          mov    $0x0,%eax
  4017c3:       48 c7 c1 ff ff ff ff    mov    $0xffffffffffffffff,%rcx
  4017ca:       48 89 d7                mov    %rdx,%rdi
  4017cd:       f2 ae                   repnz scas %es:(%rdi),%al
  4017cf:       48 f7 d1                not    %rcx
  4017d2:       48 83 e9 01             sub    $0x1,%rcx
  4017d6:       83 f9 4e                cmp    $0x4e,%ecx
  4017d9:       7e 46                   jle    401821 <read_line+0xfc>
  4017db:       bf 74 29 40 00          mov    $0x402974,%edi
  4017e0:       e8 8b f3 ff ff          callq  400b70 <puts@plt>
  4017e5:       8b 05 c1 2f 20 00       mov    0x202fc1(%rip),%eax        # 6047ac <num_input_strings>
  4017eb:       8d 50 01                lea    0x1(%rax),%edx
  4017ee:       89 15 b8 2f 20 00       mov    %edx,0x202fb8(%rip)        # 6047ac <num_input_strings>
  4017f4:       48 98                   cltq
  4017f6:       48 6b c0 50             imul   $0x50,%rax,%rax
  4017fa:       48 bf 2a 2a 2a 74 72    movabs $0x636e7572742a2a2a,%rdi
  401801:       75 6e 63
  401804:       48 89 b8 c0 47 60 00    mov    %rdi,0x6047c0(%rax)
  40180b:       48 bf 61 74 65 64 2a    movabs $0x2a2a2a64657461,%rdi
  401812:       2a 2a 00
  401815:       48 89 b8 c8 47 60 00    mov    %rdi,0x6047c8(%rax)
  40181c:       e8 8f fe ff ff          callq  4016b0 <explode_bomb>
  401821:       83 e9 01                sub    $0x1,%ecx
  401824:       48 63 c9                movslq %ecx,%rcx
  401827:       48 63 c6                movslq %esi,%rax
  40182a:       48 8d 04 80             lea    (%rax,%rax,4),%rax
  40182e:       48 c1 e0 04             shl    $0x4,%rax
  401832:       c6 84 01 c0 47 60 00    movb   $0x0,0x6047c0(%rcx,%rax,1)
  401839:       00
  40183a:       8d 46 01                lea    0x1(%rsi),%eax
  40183d:       89 05 69 2f 20 00       mov    %eax,0x202f69(%rip)        # 6047ac <num_input_strings>
  401843:       48 89 d0                mov    %rdx,%rax
  401846:       48 83 c4 08             add    $0x8,%rsp
  40184a:       c3                      retq

000000000040184b <phase_defused>:
  40184b:       48 83 ec 78             sub    $0x78,%rsp
  40184f:       64 48 8b 04 25 28 00    mov    %fs:0x28,%rax
  401856:       00 00
  401858:       48 89 44 24 68          mov    %rax,0x68(%rsp)
  40185d:       31 c0                   xor    %eax,%eax
  40185f:       bf 01 00 00 00          mov    $0x1,%edi
  401864:       e8 3d fd ff ff          callq  4015a6 <send_msg>
  401869:       83 3d 3c 2f 20 00 06    cmpl   $0x6,0x202f3c(%rip)        # 6047ac <num_input_strings>
  401870:       75 6d                   jne    4018df <phase_defused+0x94>
  401872:       4c 8d 44 24 10          lea    0x10(%rsp),%r8
  401877:       48 8d 4c 24 0c          lea    0xc(%rsp),%rcx
  40187c:       48 8d 54 24 08          lea    0x8(%rsp),%rdx
  401881:       be 8f 29 40 00          mov    $0x40298f,%esi
  401886:       bf b0 48 60 00          mov    $0x6048b0,%edi
  40188b:       b8 00 00 00 00          mov    $0x0,%eax
  401890:       e8 ab f3 ff ff          callq  400c40 <__isoc99_sscanf@plt>
  401895:       83 f8 03                cmp    $0x3,%eax
  401898:       75 31                   jne    4018cb <phase_defused+0x80>
  40189a:       be 98 29 40 00          mov    $0x402998,%esi
  40189f:       48 8d 7c 24 10          lea    0x10(%rsp),%rdi
  4018a4:       e8 33 fb ff ff          callq  4013dc <strings_not_equal>
  4018a9:       85 c0                   test   %eax,%eax
  4018ab:       75 1e                   jne    4018cb <phase_defused+0x80>
  4018ad:       bf f0 27 40 00          mov    $0x4027f0,%edi
  4018b2:       e8 b9 f2 ff ff          callq  400b70 <puts@plt>
  4018b7:       bf 18 28 40 00          mov    $0x402818,%edi
  4018bc:       e8 af f2 ff ff          callq  400b70 <puts@plt>
  4018c1:       b8 00 00 00 00          mov    $0x0,%eax
  4018c6:       e8 27 fa ff ff          callq  4012f2 <secret_phase>
  4018cb:       bf 50 28 40 00          mov    $0x402850,%edi
  4018d0:       e8 9b f2 ff ff          callq  400b70 <puts@plt>
  4018d5:       bf 80 28 40 00          mov    $0x402880,%edi
  4018da:       e8 91 f2 ff ff          callq  400b70 <puts@plt>
  4018df:       48 8b 44 24 68          mov    0x68(%rsp),%rax
  4018e4:       64 48 33 04 25 28 00    xor    %fs:0x28,%rax
  4018eb:       00 00
  4018ed:       74 05                   je     4018f4 <phase_defused+0xa9>
  4018ef:       e8 9c f2 ff ff          callq  400b90 <__stack_chk_fail@plt>
  4018f4:       48 83 c4 78             add    $0x78,%rsp
  4018f8:       c3                      retq

00000000004018f9 <sigalrm_handler>:
  4018f9:       48 83 ec 08             sub    $0x8,%rsp
  4018fd:       b9 00 00 00 00          mov    $0x0,%ecx
  401902:       ba f8 2d 40 00          mov    $0x402df8,%edx
  401907:       be 01 00 00 00          mov    $0x1,%esi
  40190c:       48 8b 3d 8d 2e 20 00    mov    0x202e8d(%rip),%rdi        # 6047a0 <stderr@@GLIBC_2.2.5>
  401913:       b8 00 00 00 00          mov    $0x0,%eax
  401918:       e8 83 f3 ff ff          callq  400ca0 <__fprintf_chk@plt>
  40191d:       bf 01 00 00 00          mov    $0x1,%edi
  401922:       e8 59 f3 ff ff          callq  400c80 <exit@plt>

0000000000401927 <rio_readlineb>:
  401927:       41 56                   push   %r14
  401929:       41 55                   push   %r13
  40192b:       41 54                   push   %r12
  40192d:       55                      push   %rbp
  40192e:       53                      push   %rbx
  40192f:       48 83 ec 10             sub    $0x10,%rsp
  401933:       48 89 fb                mov    %rdi,%rbx
  401936:       49 89 f5                mov    %rsi,%r13
  401939:       49 89 d6                mov    %rdx,%r14
  40193c:       64 48 8b 04 25 28 00    mov    %fs:0x28,%rax
  401943:       00 00
  401945:       48 89 44 24 08          mov    %rax,0x8(%rsp)
  40194a:       31 c0                   xor    %eax,%eax
  40194c:       41 bc 01 00 00 00       mov    $0x1,%r12d
  401952:       48 8d 6f 10             lea    0x10(%rdi),%rbp
  401956:       48 83 fa 01             cmp    $0x1,%rdx
  40195a:       77 2c                   ja     401988 <rio_readlineb+0x61>
  40195c:       eb 6d                   jmp    4019cb <rio_readlineb+0xa4>
  40195e:       ba 00 20 00 00          mov    $0x2000,%edx
  401963:       48 89 ee                mov    %rbp,%rsi
  401966:       8b 3b                   mov    (%rbx),%edi
  401968:       e8 53 f2 ff ff          callq  400bc0 <read@plt>
  40196d:       89 43 04                mov    %eax,0x4(%rbx)
  401970:       85 c0                   test   %eax,%eax
  401972:       79 0c                   jns    401980 <rio_readlineb+0x59>
  401974:       e8 d7 f1 ff ff          callq  400b50 <__errno_location@plt>
  401979:       83 38 04                cmpl   $0x4,(%rax)
  40197c:       74 0a                   je     401988 <rio_readlineb+0x61>
  40197e:       eb 6c                   jmp    4019ec <rio_readlineb+0xc5>
  401980:       85 c0                   test   %eax,%eax
  401982:       74 71                   je     4019f5 <rio_readlineb+0xce>
  401984:       48 89 6b 08             mov    %rbp,0x8(%rbx)
  401988:       8b 43 04                mov    0x4(%rbx),%eax
  40198b:       85 c0                   test   %eax,%eax
  40198d:       7e cf                   jle    40195e <rio_readlineb+0x37>
  40198f:       48 8b 53 08             mov    0x8(%rbx),%rdx
  401993:       0f b6 0a                movzbl (%rdx),%ecx
  401996:       88 4c 24 07             mov    %cl,0x7(%rsp)
  40199a:       48 83 c2 01             add    $0x1,%rdx
  40199e:       48 89 53 08             mov    %rdx,0x8(%rbx)
  4019a2:       83 e8 01                sub    $0x1,%eax
  4019a5:       89 43 04                mov    %eax,0x4(%rbx)
  4019a8:       49 83 c5 01             add    $0x1,%r13
  4019ac:       41 88 4d ff             mov    %cl,-0x1(%r13)
  4019b0:       80 f9 0a                cmp    $0xa,%cl
  4019b3:       75 0a                   jne    4019bf <rio_readlineb+0x98>
  4019b5:       eb 14                   jmp    4019cb <rio_readlineb+0xa4>
  4019b7:       41 83 fc 01             cmp    $0x1,%r12d
  4019bb:       75 0e                   jne    4019cb <rio_readlineb+0xa4>
  4019bd:       eb 16                   jmp    4019d5 <rio_readlineb+0xae>
  4019bf:       41 83 c4 01             add    $0x1,%r12d
  4019c3:       49 63 c4                movslq %r12d,%rax
  4019c6:       4c 39 f0                cmp    %r14,%rax
  4019c9:       72 bd                   jb     401988 <rio_readlineb+0x61>
  4019cb:       41 c6 45 00 00          movb   $0x0,0x0(%r13)
  4019d0:       49 63 c4                movslq %r12d,%rax
  4019d3:       eb 05                   jmp    4019da <rio_readlineb+0xb3>
  4019d5:       b8 00 00 00 00          mov    $0x0,%eax
  4019da:       48 8b 4c 24 08          mov    0x8(%rsp),%rcx
  4019df:       64 48 33 0c 25 28 00    xor    %fs:0x28,%rcx
  4019e6:       00 00
  4019e8:       74 22                   je     401a0c <rio_readlineb+0xe5>
  4019ea:       eb 1b                   jmp    401a07 <rio_readlineb+0xe0>
  4019ec:       48 c7 c0 ff ff ff ff    mov    $0xffffffffffffffff,%rax
  4019f3:       eb 05                   jmp    4019fa <rio_readlineb+0xd3>
  4019f5:       b8 00 00 00 00          mov    $0x0,%eax
  4019fa:       85 c0                   test   %eax,%eax
  4019fc:       74 b9                   je     4019b7 <rio_readlineb+0x90>
  4019fe:       48 c7 c0 ff ff ff ff    mov    $0xffffffffffffffff,%rax
  401a05:       eb d3                   jmp    4019da <rio_readlineb+0xb3>
  401a07:       e8 84 f1 ff ff          callq  400b90 <__stack_chk_fail@plt>
  401a0c:       48 83 c4 10             add    $0x10,%rsp
  401a10:       5b                      pop    %rbx
  401a11:       5d                      pop    %rbp
  401a12:       41 5c                   pop    %r12
  401a14:       41 5d                   pop    %r13
  401a16:       41 5e                   pop    %r14
  401a18:       c3                      retq

0000000000401a19 <submitr>:
  401a19:       41 57                   push   %r15
  401a1b:       41 56                   push   %r14
  401a1d:       41 55                   push   %r13
  401a1f:       41 54                   push   %r12
  401a21:       55                      push   %rbp
  401a22:       53                      push   %rbx
  401a23:       48 81 ec 68 a0 00 00    sub    $0xa068,%rsp
  401a2a:       49 89 fd                mov    %rdi,%r13
  401a2d:       89 f5                   mov    %esi,%ebp
  401a2f:       48 89 14 24             mov    %rdx,(%rsp)
  401a33:       48 89 4c 24 08          mov    %rcx,0x8(%rsp)
  401a38:       4c 89 44 24 18          mov    %r8,0x18(%rsp)
  401a3d:       4c 89 4c 24 10          mov    %r9,0x10(%rsp)
  401a42:       48 8b 9c 24 a0 a0 00    mov    0xa0a0(%rsp),%rbx
  401a49:       00
  401a4a:       4c 8b bc 24 a8 a0 00    mov    0xa0a8(%rsp),%r15
  401a51:       00
  401a52:       64 48 8b 04 25 28 00    mov    %fs:0x28,%rax
  401a59:       00 00
  401a5b:       48 89 84 24 58 a0 00    mov    %rax,0xa058(%rsp)
  401a62:       00
  401a63:       31 c0                   xor    %eax,%eax
  401a65:       c7 44 24 2c 00 00 00    movl   $0x0,0x2c(%rsp)
  401a6c:       00
  401a6d:       ba 00 00 00 00          mov    $0x0,%edx
  401a72:       be 01 00 00 00          mov    $0x1,%esi
  401a77:       bf 02 00 00 00          mov    $0x2,%edi
  401a7c:       e8 5f f2 ff ff          callq  400ce0 <socket@plt>
  401a81:       85 c0                   test   %eax,%eax
  401a83:       79 50                   jns    401ad5 <submitr+0xbc>
  401a85:       48 b8 45 72 72 6f 72    movabs $0x43203a726f727245,%rax
  401a8c:       3a 20 43
  401a8f:       49 89 07                mov    %rax,(%r15)
  401a92:       48 b8 6c 69 65 6e 74    movabs $0x6e7520746e65696c,%rax
  401a99:       20 75 6e
  401a9c:       49 89 47 08             mov    %rax,0x8(%r15)
  401aa0:       48 b8 61 62 6c 65 20    movabs $0x206f7420656c6261,%rax
  401aa7:       74 6f 20
  401aaa:       49 89 47 10             mov    %rax,0x10(%r15)
  401aae:       48 b8 63 72 65 61 74    movabs $0x7320657461657263,%rax
  401ab5:       65 20 73
  401ab8:       49 89 47 18             mov    %rax,0x18(%r15)
  401abc:       41 c7 47 20 6f 63 6b    movl   $0x656b636f,0x20(%r15)
  401ac3:       65
  401ac4:       66 41 c7 47 24 74 00    movw   $0x74,0x24(%r15)
  401acb:       b8 ff ff ff ff          mov    $0xffffffff,%eax
  401ad0:       e9 12 06 00 00          jmpq   4020e7 <submitr+0x6ce>
  401ad5:       41 89 c4                mov    %eax,%r12d
  401ad8:       4c 89 ef                mov    %r13,%rdi
  401adb:       e8 20 f1 ff ff          callq  400c00 <gethostbyname@plt>
  401ae0:       48 85 c0                test   %rax,%rax
  401ae3:       75 6b                   jne    401b50 <submitr+0x137>
  401ae5:       48 b8 45 72 72 6f 72    movabs $0x44203a726f727245,%rax
  401aec:       3a 20 44
  401aef:       49 89 07                mov    %rax,(%r15)
  401af2:       48 b8 4e 53 20 69 73    movabs $0x6e7520736920534e,%rax
  401af9:       20 75 6e
  401afc:       49 89 47 08             mov    %rax,0x8(%r15)
  401b00:       48 b8 61 62 6c 65 20    movabs $0x206f7420656c6261,%rax
  401b07:       74 6f 20
  401b0a:       49 89 47 10             mov    %rax,0x10(%r15)
  401b0e:       48 b8 72 65 73 6f 6c    movabs $0x2065766c6f736572,%rax
  401b15:       76 65 20
  401b18:       49 89 47 18             mov    %rax,0x18(%r15)
  401b1c:       48 b8 73 65 72 76 65    movabs $0x6120726576726573,%rax
  401b23:       72 20 61
  401b26:       49 89 47 20             mov    %rax,0x20(%r15)
  401b2a:       41 c7 47 28 64 64 72    movl   $0x65726464,0x28(%r15)
  401b31:       65
  401b32:       66 41 c7 47 2c 73 73    movw   $0x7373,0x2c(%r15)
  401b39:       41 c6 47 2e 00          movb   $0x0,0x2e(%r15)
  401b3e:       44 89 e7                mov    %r12d,%edi
  401b41:       e8 6a f0 ff ff          callq  400bb0 <close@plt>
  401b46:       b8 ff ff ff ff          mov    $0xffffffff,%eax
  401b4b:       e9 97 05 00 00          jmpq   4020e7 <submitr+0x6ce>
  401b50:       48 c7 44 24 30 00 00    movq   $0x0,0x30(%rsp)
  401b57:       00 00
  401b59:       48 c7 44 24 38 00 00    movq   $0x0,0x38(%rsp)
  401b60:       00 00
  401b62:       66 c7 44 24 30 02 00    movw   $0x2,0x30(%rsp)
  401b69:       48 63 50 14             movslq 0x14(%rax),%rdx
  401b6d:       48 8b 40 18             mov    0x18(%rax),%rax
  401b71:       48 8d 7c 24 34          lea    0x34(%rsp),%rdi
  401b76:       b9 0c 00 00 00          mov    $0xc,%ecx
  401b7b:       48 8b 30                mov    (%rax),%rsi
  401b7e:       e8 8d f0 ff ff          callq  400c10 <__memmove_chk@plt>
  401b83:       66 c1 cd 08             ror    $0x8,%bp
  401b87:       66 89 6c 24 32          mov    %bp,0x32(%rsp)
  401b8c:       ba 10 00 00 00          mov    $0x10,%edx
  401b91:       48 8d 74 24 30          lea    0x30(%rsp),%rsi
  401b96:       44 89 e7                mov    %r12d,%edi
  401b99:       e8 f2 f0 ff ff          callq  400c90 <connect@plt>
  401b9e:       85 c0                   test   %eax,%eax
  401ba0:       79 5d                   jns    401bff <submitr+0x1e6>
  401ba2:       48 b8 45 72 72 6f 72    movabs $0x55203a726f727245,%rax
  401ba9:       3a 20 55
  401bac:       49 89 07                mov    %rax,(%r15)
  401baf:       48 b8 6e 61 62 6c 65    movabs $0x6f7420656c62616e,%rax
  401bb6:       20 74 6f
  401bb9:       49 89 47 08             mov    %rax,0x8(%r15)
  401bbd:       48 b8 20 63 6f 6e 6e    movabs $0x7463656e6e6f6320,%rax
  401bc4:       65 63 74
  401bc7:       49 89 47 10             mov    %rax,0x10(%r15)
  401bcb:       48 b8 20 74 6f 20 74    movabs $0x20656874206f7420,%rax
  401bd2:       68 65 20
  401bd5:       49 89 47 18             mov    %rax,0x18(%r15)
  401bd9:       41 c7 47 20 73 65 72    movl   $0x76726573,0x20(%r15)
  401be0:       76
  401be1:       66 41 c7 47 24 65 72    movw   $0x7265,0x24(%r15)
  401be8:       41 c6 47 26 00          movb   $0x0,0x26(%r15)
  401bed:       44 89 e7                mov    %r12d,%edi
  401bf0:       e8 bb ef ff ff          callq  400bb0 <close@plt>
  401bf5:       b8 ff ff ff ff          mov    $0xffffffff,%eax
  401bfa:       e9 e8 04 00 00          jmpq   4020e7 <submitr+0x6ce>
  401bff:       49 c7 c1 ff ff ff ff    mov    $0xffffffffffffffff,%r9
  401c06:       b8 00 00 00 00          mov    $0x0,%eax
  401c0b:       4c 89 c9                mov    %r9,%rcx
  401c0e:       48 89 df                mov    %rbx,%rdi
  401c11:       f2 ae                   repnz scas %es:(%rdi),%al
  401c13:       48 f7 d1                not    %rcx
  401c16:       48 89 ce                mov    %rcx,%rsi
  401c19:       4c 89 c9                mov    %r9,%rcx
  401c1c:       48 8b 3c 24             mov    (%rsp),%rdi
  401c20:       f2 ae                   repnz scas %es:(%rdi),%al
  401c22:       49 89 c8                mov    %rcx,%r8
  401c25:       4c 89 c9                mov    %r9,%rcx
  401c28:       48 8b 7c 24 08          mov    0x8(%rsp),%rdi
  401c2d:       f2 ae                   repnz scas %es:(%rdi),%al
  401c2f:       48 f7 d1                not    %rcx
  401c32:       48 89 ca                mov    %rcx,%rdx
  401c35:       4c 89 c9                mov    %r9,%rcx
  401c38:       48 8b 7c 24 10          mov    0x10(%rsp),%rdi
  401c3d:       f2 ae                   repnz scas %es:(%rdi),%al
  401c3f:       4c 29 c2                sub    %r8,%rdx
  401c42:       48 29 ca                sub    %rcx,%rdx
  401c45:       48 8d 44 76 fd          lea    -0x3(%rsi,%rsi,2),%rax
  401c4a:       48 8d 44 02 7b          lea    0x7b(%rdx,%rax,1),%rax
  401c4f:       48 3d 00 20 00 00       cmp    $0x2000,%rax
  401c55:       76 73                   jbe    401cca <submitr+0x2b1>
  401c57:       48 b8 45 72 72 6f 72    movabs $0x52203a726f727245,%rax
  401c5e:       3a 20 52
  401c61:       49 89 07                mov    %rax,(%r15)
  401c64:       48 b8 65 73 75 6c 74    movabs $0x747320746c757365,%rax
  401c6b:       20 73 74
  401c6e:       49 89 47 08             mov    %rax,0x8(%r15)
  401c72:       48 b8 72 69 6e 67 20    movabs $0x6f6f7420676e6972,%rax
  401c79:       74 6f 6f
  401c7c:       49 89 47 10             mov    %rax,0x10(%r15)
  401c80:       48 b8 20 6c 61 72 67    movabs $0x202e656772616c20,%rax
  401c87:       65 2e 20
  401c8a:       49 89 47 18             mov    %rax,0x18(%r15)
  401c8e:       48 b8 49 6e 63 72 65    movabs $0x6573616572636e49,%rax
  401c95:       61 73 65
  401c98:       49 89 47 20             mov    %rax,0x20(%r15)
  401c9c:       48 b8 20 53 55 42 4d    movabs $0x5254494d42555320,%rax
  401ca3:       49 54 52
  401ca6:       49 89 47 28             mov    %rax,0x28(%r15)
  401caa:       48 b8 5f 4d 41 58 42    movabs $0x46554258414d5f,%rax
  401cb1:       55 46 00
  401cb4:       49 89 47 30             mov    %rax,0x30(%r15)
  401cb8:       44 89 e7                mov    %r12d,%edi
  401cbb:       e8 f0 ee ff ff          callq  400bb0 <close@plt>
  401cc0:       b8 ff ff ff ff          mov    $0xffffffff,%eax
  401cc5:       e9 1d 04 00 00          jmpq   4020e7 <submitr+0x6ce>
  401cca:       48 8d 94 24 50 40 00    lea    0x4050(%rsp),%rdx
  401cd1:       00
  401cd2:       b9 00 04 00 00          mov    $0x400,%ecx
  401cd7:       b8 00 00 00 00          mov    $0x0,%eax
  401cdc:       48 89 d7                mov    %rdx,%rdi
  401cdf:       f3 48 ab                rep stos %rax,%es:(%rdi)
  401ce2:       48 c7 c1 ff ff ff ff    mov    $0xffffffffffffffff,%rcx
  401ce9:       48 89 df                mov    %rbx,%rdi
  401cec:       f2 ae                   repnz scas %es:(%rdi),%al
  401cee:       48 89 c8                mov    %rcx,%rax
  401cf1:       48 f7 d0                not    %rax
  401cf4:       48 83 e8 01             sub    $0x1,%rax
  401cf8:       85 c0                   test   %eax,%eax
  401cfa:       0f 84 90 04 00 00       je     402190 <submitr+0x777>
  401d00:       8d 40 ff                lea    -0x1(%rax),%eax
  401d03:       4c 8d 74 03 01          lea    0x1(%rbx,%rax,1),%r14
  401d08:       48 89 d5                mov    %rdx,%rbp
  401d0b:       49 bd d9 ff 00 00 00    movabs $0x2000000000ffd9,%r13
  401d12:       00 20 00
  401d15:       44 0f b6 03             movzbl (%rbx),%r8d
  401d19:       41 8d 40 d6             lea    -0x2a(%r8),%eax
  401d1d:       3c 35                   cmp    $0x35,%al
  401d1f:       77 06                   ja     401d27 <submitr+0x30e>
  401d21:       49 0f a3 c5             bt     %rax,%r13
  401d25:       72 0d                   jb     401d34 <submitr+0x31b>
  401d27:       44 89 c0                mov    %r8d,%eax
  401d2a:       83 e0 df                and    $0xffffffdf,%eax
  401d2d:       83 e8 41                sub    $0x41,%eax
  401d30:       3c 19                   cmp    $0x19,%al
  401d32:       77 0a                   ja     401d3e <submitr+0x325>
  401d34:       44 88 45 00             mov    %r8b,0x0(%rbp)
  401d38:       48 8d 6d 01             lea    0x1(%rbp),%rbp
  401d3c:       eb 6c                   jmp    401daa <submitr+0x391>
  401d3e:       41 80 f8 20             cmp    $0x20,%r8b
  401d42:       75 0a                   jne    401d4e <submitr+0x335>
  401d44:       c6 45 00 2b             movb   $0x2b,0x0(%rbp)
  401d48:       48 8d 6d 01             lea    0x1(%rbp),%rbp
  401d4c:       eb 5c                   jmp    401daa <submitr+0x391>
  401d4e:       41 8d 40 e0             lea    -0x20(%r8),%eax
  401d52:       3c 5f                   cmp    $0x5f,%al
  401d54:       76 0a                   jbe    401d60 <submitr+0x347>
  401d56:       41 80 f8 09             cmp    $0x9,%r8b
  401d5a:       0f 85 a3 03 00 00       jne    402103 <submitr+0x6ea>
  401d60:       45 0f b6 c0             movzbl %r8b,%r8d
  401d64:       b9 d0 2e 40 00          mov    $0x402ed0,%ecx
  401d69:       ba 08 00 00 00          mov    $0x8,%edx
  401d6e:       be 01 00 00 00          mov    $0x1,%esi
  401d73:       48 8d bc 24 50 80 00    lea    0x8050(%rsp),%rdi
  401d7a:       00
  401d7b:       b8 00 00 00 00          mov    $0x0,%eax
  401d80:       e8 4b ef ff ff          callq  400cd0 <__sprintf_chk@plt>
  401d85:       0f b6 84 24 50 80 00    movzbl 0x8050(%rsp),%eax
  401d8c:       00
  401d8d:       88 45 00                mov    %al,0x0(%rbp)
  401d90:       0f b6 84 24 51 80 00    movzbl 0x8051(%rsp),%eax
  401d97:       00
  401d98:       88 45 01                mov    %al,0x1(%rbp)
  401d9b:       0f b6 84 24 52 80 00    movzbl 0x8052(%rsp),%eax
  401da2:       00
  401da3:       88 45 02                mov    %al,0x2(%rbp)
  401da6:       48 8d 6d 03             lea    0x3(%rbp),%rbp
  401daa:       48 83 c3 01             add    $0x1,%rbx
  401dae:       49 39 de                cmp    %rbx,%r14
  401db1:       0f 85 5e ff ff ff       jne    401d15 <submitr+0x2fc>
  401db7:       e9 d4 03 00 00          jmpq   402190 <submitr+0x777>
  401dbc:       48 89 da                mov    %rbx,%rdx
  401dbf:       48 89 ee                mov    %rbp,%rsi
  401dc2:       44 89 e7                mov    %r12d,%edi
  401dc5:       e8 b6 ed ff ff          callq  400b80 <write@plt>
  401dca:       48 85 c0                test   %rax,%rax
  401dcd:       7f 0f                   jg     401dde <submitr+0x3c5>
  401dcf:       e8 7c ed ff ff          callq  400b50 <__errno_location@plt>
  401dd4:       83 38 04                cmpl   $0x4,(%rax)
  401dd7:       75 12                   jne    401deb <submitr+0x3d2>
  401dd9:       b8 00 00 00 00          mov    $0x0,%eax
  401dde:       48 01 c5                add    %rax,%rbp
  401de1:       48 29 c3                sub    %rax,%rbx
  401de4:       75 d6                   jne    401dbc <submitr+0x3a3>
  401de6:       4d 85 ed                test   %r13,%r13
  401de9:       79 5f                   jns    401e4a <submitr+0x431>
  401deb:       48 b8 45 72 72 6f 72    movabs $0x43203a726f727245,%rax
  401df2:       3a 20 43
  401df5:       49 89 07                mov    %rax,(%r15)
  401df8:       48 b8 6c 69 65 6e 74    movabs $0x6e7520746e65696c,%rax
  401dff:       20 75 6e
  401e02:       49 89 47 08             mov    %rax,0x8(%r15)
  401e06:       48 b8 61 62 6c 65 20    movabs $0x206f7420656c6261,%rax
  401e0d:       74 6f 20
  401e10:       49 89 47 10             mov    %rax,0x10(%r15)
  401e14:       48 b8 77 72 69 74 65    movabs $0x6f74206574697277,%rax
  401e1b:       20 74 6f
  401e1e:       49 89 47 18             mov    %rax,0x18(%r15)
  401e22:       48 b8 20 74 68 65 20    movabs $0x7265732065687420,%rax
  401e29:       73 65 72
  401e2c:       49 89 47 20             mov    %rax,0x20(%r15)
  401e30:       41 c7 47 28 76 65 72    movl   $0x726576,0x28(%r15)
  401e37:       00
  401e38:       44 89 e7                mov    %r12d,%edi
  401e3b:       e8 70 ed ff ff          callq  400bb0 <close@plt>
  401e40:       b8 ff ff ff ff          mov    $0xffffffff,%eax
  401e45:       e9 9d 02 00 00          jmpq   4020e7 <submitr+0x6ce>
  401e4a:       44 89 64 24 40          mov    %r12d,0x40(%rsp)
  401e4f:       c7 44 24 44 00 00 00    movl   $0x0,0x44(%rsp)
  401e56:       00
  401e57:       48 8d 44 24 50          lea    0x50(%rsp),%rax
  401e5c:       48 89 44 24 48          mov    %rax,0x48(%rsp)
  401e61:       ba 00 20 00 00          mov    $0x2000,%edx
  401e66:       48 8d b4 24 50 20 00    lea    0x2050(%rsp),%rsi
  401e6d:       00
  401e6e:       48 8d 7c 24 40          lea    0x40(%rsp),%rdi
  401e73:       e8 af fa ff ff          callq  401927 <rio_readlineb>
  401e78:       48 85 c0                test   %rax,%rax
  401e7b:       7f 74                   jg     401ef1 <submitr+0x4d8>
  401e7d:       48 b8 45 72 72 6f 72    movabs $0x43203a726f727245,%rax
  401e84:       3a 20 43
  401e87:       49 89 07                mov    %rax,(%r15)
  401e8a:       48 b8 6c 69 65 6e 74    movabs $0x6e7520746e65696c,%rax
  401e91:       20 75 6e
  401e94:       49 89 47 08             mov    %rax,0x8(%r15)
  401e98:       48 b8 61 62 6c 65 20    movabs $0x206f7420656c6261,%rax
  401e9f:       74 6f 20
  401ea2:       49 89 47 10             mov    %rax,0x10(%r15)
  401ea6:       48 b8 72 65 61 64 20    movabs $0x7269662064616572,%rax
  401ead:       66 69 72
  401eb0:       49 89 47 18             mov    %rax,0x18(%r15)
  401eb4:       48 b8 73 74 20 68 65    movabs $0x6564616568207473,%rax
  401ebb:       61 64 65
  401ebe:       49 89 47 20             mov    %rax,0x20(%r15)
  401ec2:       48 b8 72 20 66 72 6f    movabs $0x73206d6f72662072,%rax
  401ec9:       6d 20 73
  401ecc:       49 89 47 28             mov    %rax,0x28(%r15)
  401ed0:       41 c7 47 30 65 72 76    movl   $0x65767265,0x30(%r15)
  401ed7:       65
  401ed8:       66 41 c7 47 34 72 00    movw   $0x72,0x34(%r15)
  401edf:       44 89 e7                mov    %r12d,%edi
  401ee2:       e8 c9 ec ff ff          callq  400bb0 <close@plt>
  401ee7:       b8 ff ff ff ff          mov    $0xffffffff,%eax
  401eec:       e9 f6 01 00 00          jmpq   4020e7 <submitr+0x6ce>
  401ef1:       4c 8d 84 24 50 80 00    lea    0x8050(%rsp),%r8
  401ef8:       00
  401ef9:       48 8d 4c 24 2c          lea    0x2c(%rsp),%rcx
  401efe:       48 8d 94 24 50 60 00    lea    0x6050(%rsp),%rdx
  401f05:       00
  401f06:       be d7 2e 40 00          mov    $0x402ed7,%esi
  401f0b:       48 8d bc 24 50 20 00    lea    0x2050(%rsp),%rdi
  401f12:       00
  401f13:       b8 00 00 00 00          mov    $0x0,%eax
  401f18:       e8 23 ed ff ff          callq  400c40 <__isoc99_sscanf@plt>
  401f1d:       44 8b 44 24 2c          mov    0x2c(%rsp),%r8d
  401f22:       41 81 f8 c8 00 00 00    cmp    $0xc8,%r8d
  401f29:       0f 84 be 00 00 00       je     401fed <submitr+0x5d4>
  401f2f:       4c 8d 8c 24 50 80 00    lea    0x8050(%rsp),%r9
  401f36:       00
  401f37:       b9 20 2e 40 00          mov    $0x402e20,%ecx
  401f3c:       48 c7 c2 ff ff ff ff    mov    $0xffffffffffffffff,%rdx
  401f43:       be 01 00 00 00          mov    $0x1,%esi
  401f48:       4c 89 ff                mov    %r15,%rdi
  401f4b:       b8 00 00 00 00          mov    $0x0,%eax
  401f50:       e8 7b ed ff ff          callq  400cd0 <__sprintf_chk@plt>
  401f55:       44 89 e7                mov    %r12d,%edi
  401f58:       e8 53 ec ff ff          callq  400bb0 <close@plt>
  401f5d:       b8 ff ff ff ff          mov    $0xffffffff,%eax
  401f62:       e9 80 01 00 00          jmpq   4020e7 <submitr+0x6ce>
  401f67:       ba 00 20 00 00          mov    $0x2000,%edx
  401f6c:       48 8d b4 24 50 20 00    lea    0x2050(%rsp),%rsi
  401f73:       00
  401f74:       48 8d 7c 24 40          lea    0x40(%rsp),%rdi
  401f79:       e8 a9 f9 ff ff          callq  401927 <rio_readlineb>
  401f7e:       48 85 c0                test   %rax,%rax
  401f81:       7f 6a                   jg     401fed <submitr+0x5d4>
  401f83:       48 b8 45 72 72 6f 72    movabs $0x43203a726f727245,%rax
  401f8a:       3a 20 43
  401f8d:       49 89 07                mov    %rax,(%r15)
  401f90:       48 b8 6c 69 65 6e 74    movabs $0x6e7520746e65696c,%rax
  401f97:       20 75 6e
  401f9a:       49 89 47 08             mov    %rax,0x8(%r15)
  401f9e:       48 b8 61 62 6c 65 20    movabs $0x206f7420656c6261,%rax
  401fa5:       74 6f 20
  401fa8:       49 89 47 10             mov    %rax,0x10(%r15)
  401fac:       48 b8 72 65 61 64 20    movabs $0x6165682064616572,%rax
  401fb3:       68 65 61
  401fb6:       49 89 47 18             mov    %rax,0x18(%r15)
  401fba:       48 b8 64 65 72 73 20    movabs $0x6f72662073726564,%rax
  401fc1:       66 72 6f
  401fc4:       49 89 47 20             mov    %rax,0x20(%r15)
  401fc8:       48 b8 6d 20 73 65 72    movabs $0x726576726573206d,%rax
  401fcf:       76 65 72
  401fd2:       49 89 47 28             mov    %rax,0x28(%r15)
  401fd6:       41 c6 47 30 00          movb   $0x0,0x30(%r15)
  401fdb:       44 89 e7                mov    %r12d,%edi
  401fde:       e8 cd eb ff ff          callq  400bb0 <close@plt>
  401fe3:       b8 ff ff ff ff          mov    $0xffffffff,%eax
  401fe8:       e9 fa 00 00 00          jmpq   4020e7 <submitr+0x6ce>
  401fed:       80 bc 24 50 20 00 00    cmpb   $0xd,0x2050(%rsp)
  401ff4:       0d
  401ff5:       0f 85 6c ff ff ff       jne    401f67 <submitr+0x54e>
  401ffb:       80 bc 24 51 20 00 00    cmpb   $0xa,0x2051(%rsp)
  402002:       0a
  402003:       0f 85 5e ff ff ff       jne    401f67 <submitr+0x54e>
  402009:       80 bc 24 52 20 00 00    cmpb   $0x0,0x2052(%rsp)
  402010:       00
  402011:       0f 85 50 ff ff ff       jne    401f67 <submitr+0x54e>
  402017:       ba 00 20 00 00          mov    $0x2000,%edx
  40201c:       48 8d b4 24 50 20 00    lea    0x2050(%rsp),%rsi
  402023:       00
  402024:       48 8d 7c 24 40          lea    0x40(%rsp),%rdi
  402029:       e8 f9 f8 ff ff          callq  401927 <rio_readlineb>
  40202e:       48 85 c0                test   %rax,%rax
  402031:       7f 70                   jg     4020a3 <submitr+0x68a>
  402033:       48 b8 45 72 72 6f 72    movabs $0x43203a726f727245,%rax
  40203a:       3a 20 43
  40203d:       49 89 07                mov    %rax,(%r15)
  402040:       48 b8 6c 69 65 6e 74    movabs $0x6e7520746e65696c,%rax
  402047:       20 75 6e
  40204a:       49 89 47 08             mov    %rax,0x8(%r15)
  40204e:       48 b8 61 62 6c 65 20    movabs $0x206f7420656c6261,%rax
  402055:       74 6f 20
  402058:       49 89 47 10             mov    %rax,0x10(%r15)
  40205c:       48 b8 72 65 61 64 20    movabs $0x6174732064616572,%rax
  402063:       73 74 61
  402066:       49 89 47 18             mov    %rax,0x18(%r15)
  40206a:       48 b8 74 75 73 20 6d    movabs $0x7373656d20737574,%rax
  402071:       65 73 73
  402074:       49 89 47 20             mov    %rax,0x20(%r15)
  402078:       48 b8 61 67 65 20 66    movabs $0x6d6f726620656761,%rax
  40207f:       72 6f 6d
  402082:       49 89 47 28             mov    %rax,0x28(%r15)
  402086:       48 b8 20 73 65 72 76    movabs $0x72657672657320,%rax
  40208d:       65 72 00
  402090:       49 89 47 30             mov    %rax,0x30(%r15)
  402094:       44 89 e7                mov    %r12d,%edi
  402097:       e8 14 eb ff ff          callq  400bb0 <close@plt>
  40209c:       b8 ff ff ff ff          mov    $0xffffffff,%eax
  4020a1:       eb 44                   jmp    4020e7 <submitr+0x6ce>
  4020a3:       48 8d b4 24 50 20 00    lea    0x2050(%rsp),%rsi
  4020aa:       00
  4020ab:       4c 89 ff                mov    %r15,%rdi
  4020ae:       e8 ad ea ff ff          callq  400b60 <strcpy@plt>
  4020b3:       44 89 e7                mov    %r12d,%edi
  4020b6:       e8 f5 ea ff ff          callq  400bb0 <close@plt>
  4020bb:       41 0f b6 17             movzbl (%r15),%edx
  4020bf:       b8 4f 00 00 00          mov    $0x4f,%eax
  4020c4:       29 d0                   sub    %edx,%eax
  4020c6:       75 15                   jne    4020dd <submitr+0x6c4>
  4020c8:       41 0f b6 57 01          movzbl 0x1(%r15),%edx
  4020cd:       b8 4b 00 00 00          mov    $0x4b,%eax
  4020d2:       29 d0                   sub    %edx,%eax
  4020d4:       75 07                   jne    4020dd <submitr+0x6c4>
  4020d6:       41 0f b6 47 02          movzbl 0x2(%r15),%eax
  4020db:       f7 d8                   neg    %eax
  4020dd:       85 c0                   test   %eax,%eax
  4020df:       0f 95 c0                setne  %al
  4020e2:       0f b6 c0                movzbl %al,%eax
  4020e5:       f7 d8                   neg    %eax
  4020e7:       48 8b 8c 24 58 a0 00    mov    0xa058(%rsp),%rcx
  4020ee:       00
  4020ef:       64 48 33 0c 25 28 00    xor    %fs:0x28,%rcx
  4020f6:       00 00
  4020f8:       0f 84 12 01 00 00       je     402210 <submitr+0x7f7>
  4020fe:       e9 08 01 00 00          jmpq   40220b <submitr+0x7f2>
  402103:       48 b8 45 72 72 6f 72    movabs $0x52203a726f727245,%rax
  40210a:       3a 20 52
  40210d:       49 89 07                mov    %rax,(%r15)
  402110:       48 b8 65 73 75 6c 74    movabs $0x747320746c757365,%rax
  402117:       20 73 74
  40211a:       49 89 47 08             mov    %rax,0x8(%r15)
  40211e:       48 b8 72 69 6e 67 20    movabs $0x6e6f6320676e6972,%rax
  402125:       63 6f 6e
  402128:       49 89 47 10             mov    %rax,0x10(%r15)
  40212c:       48 b8 74 61 69 6e 73    movabs $0x6e6120736e696174,%rax
  402133:       20 61 6e
  402136:       49 89 47 18             mov    %rax,0x18(%r15)
  40213a:       48 b8 20 69 6c 6c 65    movabs $0x6c6167656c6c6920,%rax
  402141:       67 61 6c
  402144:       49 89 47 20             mov    %rax,0x20(%r15)
  402148:       48 b8 20 6f 72 20 75    movabs $0x72706e7520726f20,%rax
  40214f:       6e 70 72
  402152:       49 89 47 28             mov    %rax,0x28(%r15)
  402156:       48 b8 69 6e 74 61 62    movabs $0x20656c6261746e69,%rax
  40215d:       6c 65 20
  402160:       49 89 47 30             mov    %rax,0x30(%r15)
  402164:       48 b8 63 68 61 72 61    movabs $0x6574636172616863,%rax
  40216b:       63 74 65
  40216e:       49 89 47 38             mov    %rax,0x38(%r15)
  402172:       66 41 c7 47 40 72 2e    movw   $0x2e72,0x40(%r15)
  402179:       41 c6 47 42 00          movb   $0x0,0x42(%r15)
  40217e:       44 89 e7                mov    %r12d,%edi
  402181:       e8 2a ea ff ff          callq  400bb0 <close@plt>
  402186:       b8 ff ff ff ff          mov    $0xffffffff,%eax
  40218b:       e9 57 ff ff ff          jmpq   4020e7 <submitr+0x6ce>
  402190:       48 8d 9c 24 50 20 00    lea    0x2050(%rsp),%rbx
  402197:       00
  402198:       48 83 ec 08             sub    $0x8,%rsp
  40219c:       48 8d 84 24 58 40 00    lea    0x4058(%rsp),%rax
  4021a3:       00
  4021a4:       50                      push   %rax
  4021a5:       ff 74 24 20             pushq  0x20(%rsp)
  4021a9:       ff 74 24 30             pushq  0x30(%rsp)
  4021ad:       4c 8b 4c 24 28          mov    0x28(%rsp),%r9
  4021b2:       4c 8b 44 24 20          mov    0x20(%rsp),%r8
  4021b7:       b9 50 2e 40 00          mov    $0x402e50,%ecx
  4021bc:       ba 00 20 00 00          mov    $0x2000,%edx
  4021c1:       be 01 00 00 00          mov    $0x1,%esi
  4021c6:       48 89 df                mov    %rbx,%rdi
  4021c9:       b8 00 00 00 00          mov    $0x0,%eax
  4021ce:       e8 fd ea ff ff          callq  400cd0 <__sprintf_chk@plt>
  4021d3:       b8 00 00 00 00          mov    $0x0,%eax
  4021d8:       48 c7 c1 ff ff ff ff    mov    $0xffffffffffffffff,%rcx
  4021df:       48 89 df                mov    %rbx,%rdi
  4021e2:       f2 ae                   repnz scas %es:(%rdi),%al
  4021e4:       48 89 c8                mov    %rcx,%rax
  4021e7:       48 f7 d0                not    %rax
  4021ea:       4c 8d 68 ff             lea    -0x1(%rax),%r13
  4021ee:       48 83 c4 20             add    $0x20,%rsp
  4021f2:       4c 89 eb                mov    %r13,%rbx
  4021f5:       48 8d ac 24 50 20 00    lea    0x2050(%rsp),%rbp
  4021fc:       00
  4021fd:       4d 85 ed                test   %r13,%r13
  402200:       0f 85 b6 fb ff ff       jne    401dbc <submitr+0x3a3>
  402206:       e9 3f fc ff ff          jmpq   401e4a <submitr+0x431>
  40220b:       e8 80 e9 ff ff          callq  400b90 <__stack_chk_fail@plt>
  402210:       48 81 c4 68 a0 00 00    add    $0xa068,%rsp
  402217:       5b                      pop    %rbx
  402218:       5d                      pop    %rbp
  402219:       41 5c                   pop    %r12
  40221b:       41 5d                   pop    %r13
  40221d:       41 5e                   pop    %r14
  40221f:       41 5f                   pop    %r15
  402221:       c3                      retq

0000000000402222 <init_timeout>:
  402222:       85 ff                   test   %edi,%edi
  402224:       74 22                   je     402248 <init_timeout+0x26>
  402226:       53                      push   %rbx
  402227:       89 fb                   mov    %edi,%ebx
  402229:       be f9 18 40 00          mov    $0x4018f9,%esi
  40222e:       bf 0e 00 00 00          mov    $0xe,%edi
  402233:       e8 b8 e9 ff ff          callq  400bf0 <signal@plt>
  402238:       85 db                   test   %ebx,%ebx
  40223a:       bf 00 00 00 00          mov    $0x0,%edi
  40223f:       0f 49 fb                cmovns %ebx,%edi
  402242:       e8 59 e9 ff ff          callq  400ba0 <alarm@plt>
  402247:       5b                      pop    %rbx
  402248:       f3 c3                   repz retq

000000000040224a <init_driver>:
  40224a:       55                      push   %rbp
  40224b:       53                      push   %rbx
  40224c:       48 83 ec 28             sub    $0x28,%rsp
  402250:       48 89 fd                mov    %rdi,%rbp
  402253:       64 48 8b 04 25 28 00    mov    %fs:0x28,%rax
  40225a:       00 00
  40225c:       48 89 44 24 18          mov    %rax,0x18(%rsp)
  402261:       31 c0                   xor    %eax,%eax
  402263:       be 01 00 00 00          mov    $0x1,%esi
  402268:       bf 0d 00 00 00          mov    $0xd,%edi
  40226d:       e8 7e e9 ff ff          callq  400bf0 <signal@plt>
  402272:       be 01 00 00 00          mov    $0x1,%esi
  402277:       bf 1d 00 00 00          mov    $0x1d,%edi
  40227c:       e8 6f e9 ff ff          callq  400bf0 <signal@plt>
  402281:       be 01 00 00 00          mov    $0x1,%esi
  402286:       bf 1d 00 00 00          mov    $0x1d,%edi
  40228b:       e8 60 e9 ff ff          callq  400bf0 <signal@plt>
  402290:       ba 00 00 00 00          mov    $0x0,%edx
  402295:       be 01 00 00 00          mov    $0x1,%esi
  40229a:       bf 02 00 00 00          mov    $0x2,%edi
  40229f:       e8 3c ea ff ff          callq  400ce0 <socket@plt>
  4022a4:       85 c0                   test   %eax,%eax
  4022a6:       79 4f                   jns    4022f7 <init_driver+0xad>
  4022a8:       48 b8 45 72 72 6f 72    movabs $0x43203a726f727245,%rax
  4022af:       3a 20 43
  4022b2:       48 89 45 00             mov    %rax,0x0(%rbp)
  4022b6:       48 b8 6c 69 65 6e 74    movabs $0x6e7520746e65696c,%rax
  4022bd:       20 75 6e
  4022c0:       48 89 45 08             mov    %rax,0x8(%rbp)
  4022c4:       48 b8 61 62 6c 65 20    movabs $0x206f7420656c6261,%rax
  4022cb:       74 6f 20
  4022ce:       48 89 45 10             mov    %rax,0x10(%rbp)
  4022d2:       48 b8 63 72 65 61 74    movabs $0x7320657461657263,%rax
  4022d9:       65 20 73
  4022dc:       48 89 45 18             mov    %rax,0x18(%rbp)
  4022e0:       c7 45 20 6f 63 6b 65    movl   $0x656b636f,0x20(%rbp)
  4022e7:       66 c7 45 24 74 00       movw   $0x74,0x24(%rbp)
  4022ed:       b8 ff ff ff ff          mov    $0xffffffff,%eax
  4022f2:       e9 0c 01 00 00          jmpq   402403 <init_driver+0x1b9>
  4022f7:       89 c3                   mov    %eax,%ebx
  4022f9:       bf 9f 29 40 00          mov    $0x40299f,%edi
  4022fe:       e8 fd e8 ff ff          callq  400c00 <gethostbyname@plt>
  402303:       48 85 c0                test   %rax,%rax
  402306:       75 68                   jne    402370 <init_driver+0x126>
  402308:       48 b8 45 72 72 6f 72    movabs $0x44203a726f727245,%rax
  40230f:       3a 20 44
  402312:       48 89 45 00             mov    %rax,0x0(%rbp)
  402316:       48 b8 4e 53 20 69 73    movabs $0x6e7520736920534e,%rax
  40231d:       20 75 6e
  402320:       48 89 45 08             mov    %rax,0x8(%rbp)
  402324:       48 b8 61 62 6c 65 20    movabs $0x206f7420656c6261,%rax
  40232b:       74 6f 20
  40232e:       48 89 45 10             mov    %rax,0x10(%rbp)
  402332:       48 b8 72 65 73 6f 6c    movabs $0x2065766c6f736572,%rax
  402339:       76 65 20
  40233c:       48 89 45 18             mov    %rax,0x18(%rbp)
  402340:       48 b8 73 65 72 76 65    movabs $0x6120726576726573,%rax
  402347:       72 20 61
  40234a:       48 89 45 20             mov    %rax,0x20(%rbp)
  40234e:       c7 45 28 64 64 72 65    movl   $0x65726464,0x28(%rbp)
  402355:       66 c7 45 2c 73 73       movw   $0x7373,0x2c(%rbp)
  40235b:       c6 45 2e 00             movb   $0x0,0x2e(%rbp)
  40235f:       89 df                   mov    %ebx,%edi
  402361:       e8 4a e8 ff ff          callq  400bb0 <close@plt>
  402366:       b8 ff ff ff ff          mov    $0xffffffff,%eax
  40236b:       e9 93 00 00 00          jmpq   402403 <init_driver+0x1b9>
  402370:       48 c7 04 24 00 00 00    movq   $0x0,(%rsp)
  402377:       00
  402378:       48 c7 44 24 08 00 00    movq   $0x0,0x8(%rsp)
  40237f:       00 00
  402381:       66 c7 04 24 02 00       movw   $0x2,(%rsp)
  402387:       48 63 50 14             movslq 0x14(%rax),%rdx
  40238b:       48 8b 40 18             mov    0x18(%rax),%rax
  40238f:       48 8d 7c 24 04          lea    0x4(%rsp),%rdi
  402394:       b9 0c 00 00 00          mov    $0xc,%ecx
  402399:       48 8b 30                mov    (%rax),%rsi
  40239c:       e8 6f e8 ff ff          callq  400c10 <__memmove_chk@plt>
  4023a1:       66 c7 44 24 02 43 ab    movw   $0xab43,0x2(%rsp)
  4023a8:       ba 10 00 00 00          mov    $0x10,%edx
  4023ad:       48 89 e6                mov    %rsp,%rsi
  4023b0:       89 df                   mov    %ebx,%edi
  4023b2:       e8 d9 e8 ff ff          callq  400c90 <connect@plt>
  4023b7:       85 c0                   test   %eax,%eax
  4023b9:       79 32                   jns    4023ed <init_driver+0x1a3>
  4023bb:       41 b8 9f 29 40 00       mov    $0x40299f,%r8d
  4023c1:       b9 a8 2e 40 00          mov    $0x402ea8,%ecx
  4023c6:       48 c7 c2 ff ff ff ff    mov    $0xffffffffffffffff,%rdx
  4023cd:       be 01 00 00 00          mov    $0x1,%esi
  4023d2:       48 89 ef                mov    %rbp,%rdi
  4023d5:       b8 00 00 00 00          mov    $0x0,%eax
  4023da:       e8 f1 e8 ff ff          callq  400cd0 <__sprintf_chk@plt>
  4023df:       89 df                   mov    %ebx,%edi
  4023e1:       e8 ca e7 ff ff          callq  400bb0 <close@plt>
  4023e6:       b8 ff ff ff ff          mov    $0xffffffff,%eax
  4023eb:       eb 16                   jmp    402403 <init_driver+0x1b9>
  4023ed:       89 df                   mov    %ebx,%edi
  4023ef:       e8 bc e7 ff ff          callq  400bb0 <close@plt>
  4023f4:       66 c7 45 00 4f 4b       movw   $0x4b4f,0x0(%rbp)
  4023fa:       c6 45 02 00             movb   $0x0,0x2(%rbp)
  4023fe:       b8 00 00 00 00          mov    $0x0,%eax
  402403:       48 8b 4c 24 18          mov    0x18(%rsp),%rcx
  402408:       64 48 33 0c 25 28 00    xor    %fs:0x28,%rcx
  40240f:       00 00
  402411:       74 05                   je     402418 <init_driver+0x1ce>
  402413:       e8 78 e7 ff ff          callq  400b90 <__stack_chk_fail@plt>
  402418:       48 83 c4 28             add    $0x28,%rsp
  40241c:       5b                      pop    %rbx
  40241d:       5d                      pop    %rbp
  40241e:       c3                      retq

000000000040241f <driver_post>:
  40241f:       53                      push   %rbx
  402420:       4c 89 c3                mov    %r8,%rbx
  402423:       85 c9                   test   %ecx,%ecx
  402425:       74 24                   je     40244b <driver_post+0x2c>
  402427:       be e8 2e 40 00          mov    $0x402ee8,%esi
  40242c:       bf 01 00 00 00          mov    $0x1,%edi
  402431:       b8 00 00 00 00          mov    $0x0,%eax
  402436:       e8 15 e8 ff ff          callq  400c50 <__printf_chk@plt>
  40243b:       66 c7 03 4f 4b          movw   $0x4b4f,(%rbx)
  402440:       c6 43 02 00             movb   $0x0,0x2(%rbx)
  402444:       b8 00 00 00 00          mov    $0x0,%eax
  402449:       eb 41                   jmp    40248c <driver_post+0x6d>
  40244b:       48 85 ff                test   %rdi,%rdi
  40244e:       74 2e                   je     40247e <driver_post+0x5f>
  402450:       80 3f 00                cmpb   $0x0,(%rdi)
  402453:       74 29                   je     40247e <driver_post+0x5f>
  402455:       41 50                   push   %r8
  402457:       52                      push   %rdx
  402458:       41 b9 ff 2e 40 00       mov    $0x402eff,%r9d
  40245e:       49 89 f0                mov    %rsi,%r8
  402461:       48 89 f9                mov    %rdi,%rcx
  402464:       ba 03 2f 40 00          mov    $0x402f03,%edx
  402469:       be ab 43 00 00          mov    $0x43ab,%esi
  40246e:       bf 9f 29 40 00          mov    $0x40299f,%edi
  402473:       e8 a1 f5 ff ff          callq  401a19 <submitr>
  402478:       48 83 c4 10             add    $0x10,%rsp
  40247c:       eb 0e                   jmp    40248c <driver_post+0x6d>
  40247e:       66 c7 03 4f 4b          movw   $0x4b4f,(%rbx)
  402483:       c6 43 02 00             movb   $0x0,0x2(%rbx)
  402487:       b8 00 00 00 00          mov    $0x0,%eax
  40248c:       5b                      pop    %rbx
  40248d:       c3                      retq
  40248e:       66 90                   xchg   %ax,%ax

0000000000402490 <__libc_csu_init>:
  402490:       41 57                   push   %r15
  402492:       41 56                   push   %r14
  402494:       41 89 ff                mov    %edi,%r15d
  402497:       41 55                   push   %r13
  402499:       41 54                   push   %r12
  40249b:       4c 8d 25 6e 19 20 00    lea    0x20196e(%rip),%r12        # 603e10 <__frame_dummy_init_array_entry>
  4024a2:       55                      push   %rbp
  4024a3:       48 8d 2d 6e 19 20 00    lea    0x20196e(%rip),%rbp        # 603e18 <__init_array_end>
  4024aa:       53                      push   %rbx
  4024ab:       49 89 f6                mov    %rsi,%r14
  4024ae:       49 89 d5                mov    %rdx,%r13
  4024b1:       4c 29 e5                sub    %r12,%rbp
  4024b4:       48 83 ec 08             sub    $0x8,%rsp
  4024b8:       48 c1 fd 03             sar    $0x3,%rbp
  4024bc:       e8 3f e6 ff ff          callq  400b00 <_init>
  4024c1:       48 85 ed                test   %rbp,%rbp
  4024c4:       74 20                   je     4024e6 <__libc_csu_init+0x56>
  4024c6:       31 db                   xor    %ebx,%ebx
  4024c8:       0f 1f 84 00 00 00 00    nopl   0x0(%rax,%rax,1)
  4024cf:       00
  4024d0:       4c 89 ea                mov    %r13,%rdx
  4024d3:       4c 89 f6                mov    %r14,%rsi
  4024d6:       44 89 ff                mov    %r15d,%edi
  4024d9:       41 ff 14 dc             callq  *(%r12,%rbx,8)
  4024dd:       48 83 c3 01             add    $0x1,%rbx
  4024e1:       48 39 eb                cmp    %rbp,%rbx
  4024e4:       75 ea                   jne    4024d0 <__libc_csu_init+0x40>
  4024e6:       48 83 c4 08             add    $0x8,%rsp
  4024ea:       5b                      pop    %rbx
  4024eb:       5d                      pop    %rbp
  4024ec:       41 5c                   pop    %r12
  4024ee:       41 5d                   pop    %r13
  4024f0:       41 5e                   pop    %r14
  4024f2:       41 5f                   pop    %r15
  4024f4:       c3                      retq
  4024f5:       90                      nop
  4024f6:       66 2e 0f 1f 84 00 00    nopw   %cs:0x0(%rax,%rax,1)
  4024fd:       00 00 00

0000000000402500 <__libc_csu_fini>:
  402500:       f3 c3                   repz retq

Disassembly of section .fini:

0000000000402504 <_fini>:
  402504:       48 83 ec 08             sub    $0x8,%rsp
  402508:       48 83 c4 08             add    $0x8,%rsp
  40250c:       c3                      retq
